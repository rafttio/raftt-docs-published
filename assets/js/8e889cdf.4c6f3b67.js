"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[828],{3905:function(e,t,n){n.d(t,{Zo:function(){return c},kt:function(){return u}});var r=n(7294);function a(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function i(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function o(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?i(Object(n),!0).forEach((function(t){a(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):i(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function l(e,t){if(null==e)return{};var n,r,a=function(e,t){if(null==e)return{};var n,r,a={},i=Object.keys(e);for(r=0;r<i.length;r++)n=i[r],t.indexOf(n)>=0||(a[n]=e[n]);return a}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(r=0;r<i.length;r++)n=i[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(a[n]=e[n])}return a}var p=r.createContext({}),d=function(e){var t=r.useContext(p),n=t;return e&&(n="function"==typeof e?e(t):o(o({},t),e)),n},c=function(e){var t=d(e.components);return r.createElement(p.Provider,{value:t},e.children)},s={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},m=r.forwardRef((function(e,t){var n=e.components,a=e.mdxType,i=e.originalType,p=e.parentName,c=l(e,["components","mdxType","originalType","parentName"]),m=d(n),u=a,f=m["".concat(p,".").concat(u)]||m[u]||s[u]||i;return n?r.createElement(f,o(o({ref:t},c),{},{components:n})):r.createElement(f,o({ref:t},c))}));function u(e,t){var n=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var i=n.length,o=new Array(i);o[0]=m;var l={};for(var p in t)hasOwnProperty.call(t,p)&&(l[p]=t[p]);l.originalType=e,l.mdxType="string"==typeof e?e:a,o[1]=l;for(var d=2;d<i;d++)o[d]=n[d];return r.createElement.apply(null,o)}return r.createElement.apply(null,n)}m.displayName="MDXCreateElement"},3293:function(e,t,n){n.r(t),n.d(t,{frontMatter:function(){return l},contentTitle:function(){return p},metadata:function(){return d},toc:function(){return c},default:function(){return m}});var r=n(7462),a=n(3366),i=(n(7294),n(3905)),o=["components"],l={title:"raftt.yml"},p="Raftt Configuration File - raftt.yml",d={unversionedId:"config/raftt.yml",id:"config/raftt.yml",title:"raftt.yml",description:"The configuration of Raftt is located in the `raftt.yml` file that is created the first time you run `raftt up` for the repository.",source:"@site/docs/config/raftt.yml.md",sourceDirName:"config",slug:"/config/raftt.yml",permalink:"/docs/config/raftt.yml",tags:[],version:"current",frontMatter:{title:"raftt.yml"},sidebar:"tutorialSidebar",previous:{title:"Configuration",permalink:"/docs/config"},next:{title:"Dev Container",permalink:"/docs/config/dev_container"}},c=[{value:"raftt.yml Specification",id:"rafttyml-specification",children:[{value:"gitRoot",id:"gitroot",children:[],level:3},{value:"build",id:"build",children:[],level:3},{value:"devContainer",id:"devcontainer",children:[],level:3},{value:"admiralHost",id:"admiralhost",children:[],level:3},{value:"data",id:"data",children:[],level:3},{value:"debuggingMap",id:"debuggingmap",children:[],level:3},{value:"secrets",id:"secrets",children:[],level:3},{value:"sideRepos",id:"siderepos",children:[],level:3},{value:"repoVolumeSizeGB",id:"repovolumesizegb",children:[],level:3},{value:"tearDownScript",id:"teardownscript",children:[],level:3},{value:"warmUpScript",id:"warmupscript",children:[],level:3}],level:2}],s={toc:c};function m(e){var t=e.components,n=(0,a.Z)(e,o);return(0,i.kt)("wrapper",(0,r.Z)({},s,n,{components:t,mdxType:"MDXLayout"}),(0,i.kt)("h1",{id:"raftt-configuration-file---rafttyml"},"Raftt Configuration File - raftt.yml"),(0,i.kt)("p",null,"The configuration of Raftt is located in the ",(0,i.kt)("inlineCode",{parentName:"p"},"raftt.yml")," file that is created the first time you run ",(0,i.kt)("inlineCode",{parentName:"p"},"raftt up")," for the repository.\n(It can also be created by running ",(0,i.kt)("inlineCode",{parentName:"p"},"raftt setup")," before running ",(0,i.kt)("inlineCode",{parentName:"p"},"raftt up"),").\nOnce the file is created, you need to modify it according to your needs, and we recommend committing it to your repo."),(0,i.kt)("p",null,"See below an example ",(0,i.kt)("inlineCode",{parentName:"p"},"raftt.yml")," file containing all possible attributes.",(0,i.kt)("br",{parentName:"p"}),"\n","A more detailed explanation can be found ","[below]","(raftt.yml Reference)"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-yml"},"    build:\n        dockerComposeFile: ./docker/docker-compose.yml  # The path of of the docker-compose file used to \n                                                        # define the environment\n        workdir: ./docker/                              # The working dir when spawning the environment\n    devContainer: dev_container/dev-compose.yml         # The path of the dev container that XYZ\n    admiralHost: admiral.public.raftt.io                        \n    tearDownScript: curl admiral:8080/downall\n    secrets:\n        aws-accesskeyid-beta:\n            inputcommand: \n            outputenv: AWS_ACCESS_KEY_ID\n        ... \n    data:                                               # Database seeding configuration\n    - service: admiraldb\n        type: postgres\n        user: postgres\n        dump: dev_container/dump.sql\n    - service: backenddb\n        type: postgres\n        user: postgres\n        dump: dev_container/backenddump.sql\n    warmUpScript: dev_container/warmup.sh\n\n")),(0,i.kt)("h2",{id:"rafttyml-specification"},"raftt.yml Specification"),(0,i.kt)("h3",{id:"gitroot"},"gitRoot"),(0,i.kt)("p",null,(0,i.kt)("strong",{parentName:"p"},"(AS - ???)")),(0,i.kt)("h3",{id:"build"},"build"),(0,i.kt)("p",null,"A top-level element that contains the required information for building the containers.\nThis element contains the following keys: "),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"dockerComposeFile")," - The path of the Docker Compose file used to define the spawned environment.  "),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"workdir")," - The working directory expected when spawning the environment."),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"env")," - ",(0,i.kt)("strong",{parentName:"li"},"(AS - ???)"))),(0,i.kt)("h3",{id:"devcontainer"},"devContainer"),(0,i.kt)("p",null,"The path to the compose file defining the ",(0,i.kt)("a",{parentName:"p",href:"./dev_container"},"dev container"),".",(0,i.kt)("br",{parentName:"p"}),"\n","The dev container is added to your environment and should be used as ",(0,i.kt)("strong",{parentName:"p"},"(AS - add explanation)"),".\nUse the Dockerfile referred to in this YAML file to ensure the dev container contains everything that will help you work with it."),(0,i.kt)("h3",{id:"admiralhost"},"admiralHost"),(0,i.kt)("p",null,"The URL of the ",(0,i.kt)("a",{parentName:"p",href:"/docs/intro/how_raftt_works#admiral"},"Admiral")," - Raftt environment controller.",(0,i.kt)("br",{parentName:"p"}),"\n","Higher tiers' users can have a dedicated Admiral and should write its URL here."),(0,i.kt)("h3",{id:"data"},"data"),(0,i.kt)("p",null,"A top level element containing a list of databases and their seeding methods. For more information, see ",(0,i.kt)("a",{parentName:"p",href:"./db_seeding"},"here"),".",(0,i.kt)("br",{parentName:"p"}),"\n","Each list entry contains the following keys:  "),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"service")," - The name of the service that contains the database"),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"type")," - The database type. Can be either ",(0,i.kt)("inlineCode",{parentName:"li"},"postgres"),", ",(0,i.kt)("inlineCode",{parentName:"li"},"mongodb")," or ",(0,i.kt)("inlineCode",{parentName:"li"},"script")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"user")," - The user used to connect to the database"),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"dump")," - The dump file that is loaded to the database in the ",(0,i.kt)("a",{parentName:"li",href:"./db_seeding"},"seeding"),". phase."),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"keyProvider")," - ",(0,i.kt)("strong",{parentName:"li"},"(AS - ???)"))),(0,i.kt)("h3",{id:"debuggingmap"},"debuggingMap"),(0,i.kt)("p",null,(0,i.kt)("strong",{parentName:"p"},"(AS - ???)")),(0,i.kt)("h3",{id:"secrets"},"secrets"),(0,i.kt)("p",null,"A dictionary whose keys are the secrets names that will be loaded into the Kubernetes cluster. ",(0,i.kt)("strong",{parentName:"p"},"(AS - ???)"),(0,i.kt)("br",{parentName:"p"}),"\n","Each dictionary entry contains the following attributes:"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("p",{parentName:"li"},(0,i.kt)("inlineCode",{parentName:"p"},"inputcommand")," - The command whose output is the secret.  "),(0,i.kt)("div",{parentName:"li",className:"admonition admonition-tip alert alert--success"},(0,i.kt)("div",{parentName:"div",className:"admonition-heading"},(0,i.kt)("h5",{parentName:"div"},(0,i.kt)("span",{parentName:"h5",className:"admonition-icon"},(0,i.kt)("svg",{parentName:"span",xmlns:"http://www.w3.org/2000/svg",width:"12",height:"16",viewBox:"0 0 12 16"},(0,i.kt)("path",{parentName:"svg",fillRule:"evenodd",d:"M6.5 0C3.48 0 1 2.19 1 5c0 .92.55 2.25 1 3 1.34 2.25 1.78 2.78 2 4v1h5v-1c.22-1.22.66-1.75 2-4 .45-.75 1-2.08 1-3 0-2.81-2.48-5-5.5-5zm3.64 7.48c-.25.44-.47.8-.67 1.11-.86 1.41-1.25 2.06-1.45 3.23-.02.05-.02.11-.02.17H5c0-.06 0-.13-.02-.17-.2-1.17-.59-1.83-1.45-3.23-.2-.31-.42-.67-.67-1.11C2.44 6.78 2 5.65 2 5c0-2.2 2.02-4 4.5-4 1.22 0 2.36.42 3.22 1.19C10.55 2.94 11 3.94 11 5c0 .66-.44 1.78-.86 2.48zM4 14h5c-.23 1.14-1.3 2-2.5 2s-2.27-.86-2.5-2z"}))),"tip")),(0,i.kt)("div",{parentName:"div",className:"admonition-content"},(0,i.kt)("p",{parentName:"div"},"Since this command runs locally, we recommend using an OS-independent command, so the same raftt.yml file can be shared between team members working with different operating systems.",(0,i.kt)("br",{parentName:"p"}),"\n","A possible way to do it is having this command run a short OS-independent python code whose output is the secret.")))),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("p",{parentName:"li"},(0,i.kt)("inlineCode",{parentName:"p"},"outputenv")," - The name of the Kubernetes Secret that will contain the output of ",(0,i.kt)("inlineCode",{parentName:"p"},"inputcommand"),"."))),(0,i.kt)("h3",{id:"siderepos"},"sideRepos"),(0,i.kt)("p",null,(0,i.kt)("strong",{parentName:"p"},"(AS - ???)")),(0,i.kt)("h3",{id:"repovolumesizegb"},"repoVolumeSizeGB"),(0,i.kt)("p",null,(0,i.kt)("strong",{parentName:"p"},"(AS - ???)")),(0,i.kt)("h3",{id:"teardownscript"},"tearDownScript"),(0,i.kt)("p",null,(0,i.kt)("strong",{parentName:"p"},"(AS - ???)")),(0,i.kt)("h3",{id:"warmupscript"},"warmUpScript"),(0,i.kt)("p",null,"The path of a script executed from the context of the dev container before building and deploying the environment.",(0,i.kt)("br",{parentName:"p"}),"\n","This optional attribute can be used for setting up the environment in ways that can't/aren't defined in the Docker Compose file.\nA few examples of things you'd want to run the warm-up script are"),(0,i.kt)("ol",null,(0,i.kt)("li",{parentName:"ol"},"Copying files"),(0,i.kt)("li",{parentName:"ol"},"...")))}m.isMDXComponent=!0}}]);