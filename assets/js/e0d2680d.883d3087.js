"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[421],{3905:function(e,t,a){a.d(t,{Zo:function(){return u},kt:function(){return c}});var n=a(7294);function r(e,t,a){return t in e?Object.defineProperty(e,t,{value:a,enumerable:!0,configurable:!0,writable:!0}):e[t]=a,e}function o(e,t){var a=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),a.push.apply(a,n)}return a}function i(e){for(var t=1;t<arguments.length;t++){var a=null!=arguments[t]?arguments[t]:{};t%2?o(Object(a),!0).forEach((function(t){r(e,t,a[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(a)):o(Object(a)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(a,t))}))}return e}function l(e,t){if(null==e)return{};var a,n,r=function(e,t){if(null==e)return{};var a,n,r={},o=Object.keys(e);for(n=0;n<o.length;n++)a=o[n],t.indexOf(a)>=0||(r[a]=e[a]);return r}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(n=0;n<o.length;n++)a=o[n],t.indexOf(a)>=0||Object.prototype.propertyIsEnumerable.call(e,a)&&(r[a]=e[a])}return r}var s=n.createContext({}),d=function(e){var t=n.useContext(s),a=t;return e&&(a="function"==typeof e?e(t):i(i({},t),e)),a},u=function(e){var t=d(e.components);return n.createElement(s.Provider,{value:t},e.children)},p={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},m=n.forwardRef((function(e,t){var a=e.components,r=e.mdxType,o=e.originalType,s=e.parentName,u=l(e,["components","mdxType","originalType","parentName"]),m=d(a),c=r,f=m["".concat(s,".").concat(c)]||m[c]||p[c]||o;return a?n.createElement(f,i(i({ref:t},u),{},{components:a})):n.createElement(f,i({ref:t},u))}));function c(e,t){var a=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var o=a.length,i=new Array(o);i[0]=m;var l={};for(var s in t)hasOwnProperty.call(t,s)&&(l[s]=t[s]);l.originalType=e,l.mdxType="string"==typeof e?e:r,i[1]=l;for(var d=2;d<o;d++)i[d]=a[d];return n.createElement.apply(null,i)}return n.createElement.apply(null,a)}m.displayName="MDXCreateElement"},8215:function(e,t,a){var n=a(7294);t.Z=function(e){var t=e.children,a=e.hidden,r=e.className;return n.createElement("div",{role:"tabpanel",hidden:a,className:r},t)}},9877:function(e,t,a){a.d(t,{Z:function(){return u}});var n=a(7462),r=a(7294),o=a(2389),i=a(9548),l=a(6010),s="tabItem_LplD";function d(e){var t,a,o,d=e.lazy,u=e.block,p=e.defaultValue,m=e.values,c=e.groupId,f=e.className,h=r.Children.map(e.children,(function(e){if((0,r.isValidElement)(e)&&void 0!==e.props.value)return e;throw new Error("Docusaurus error: Bad <Tabs> child <"+("string"==typeof e.type?e.type:e.type.name)+'>: all children of the <Tabs> component should be <TabItem>, and every <TabItem> should have a unique "value" prop.')})),g=null!=m?m:h.map((function(e){var t=e.props;return{value:t.value,label:t.label,attributes:t.attributes}})),b=(0,i.lx)(g,(function(e,t){return e.value===t.value}));if(b.length>0)throw new Error('Docusaurus error: Duplicate values "'+b.map((function(e){return e.value})).join(", ")+'" found in <Tabs>. Every value needs to be unique.');var v=null===p?p:null!=(t=null!=p?p:null==(a=h.find((function(e){return e.props.default})))?void 0:a.props.value)?t:null==(o=h[0])?void 0:o.props.value;if(null!==v&&!g.some((function(e){return e.value===v})))throw new Error('Docusaurus error: The <Tabs> has a defaultValue "'+v+'" but none of its children has the corresponding value. Available values are: '+g.map((function(e){return e.value})).join(", ")+". If you intend to show no default tab, use defaultValue={null} instead.");var k=(0,i.UB)(),y=k.tabGroupChoices,N=k.setTabGroupChoices,D=(0,r.useState)(v),w=D[0],T=D[1],_=[],S=(0,i.o5)().blockElementScrollPositionUntilNextRender;if(null!=c){var A=y[c];null!=A&&A!==w&&g.some((function(e){return e.value===A}))&&T(A)}var E=function(e){var t=e.currentTarget,a=_.indexOf(t),n=g[a].value;n!==w&&(S(t),T(n),null!=c&&N(c,n))},O=function(e){var t,a=null;switch(e.key){case"ArrowRight":var n=_.indexOf(e.currentTarget)+1;a=_[n]||_[0];break;case"ArrowLeft":var r=_.indexOf(e.currentTarget)-1;a=_[r]||_[_.length-1]}null==(t=a)||t.focus()};return r.createElement("div",{className:"tabs-container"},r.createElement("ul",{role:"tablist","aria-orientation":"horizontal",className:(0,l.Z)("tabs",{"tabs--block":u},f)},g.map((function(e){var t=e.value,a=e.label,o=e.attributes;return r.createElement("li",(0,n.Z)({role:"tab",tabIndex:w===t?0:-1,"aria-selected":w===t,key:t,ref:function(e){return _.push(e)},onKeyDown:O,onFocus:E,onClick:E},o,{className:(0,l.Z)("tabs__item",s,null==o?void 0:o.className,{"tabs__item--active":w===t})}),null!=a?a:t)}))),d?(0,r.cloneElement)(h.filter((function(e){return e.props.value===w}))[0],{className:"margin-vert--md"}):r.createElement("div",{className:"margin-vert--md"},h.map((function(e,t){return(0,r.cloneElement)(e,{key:t,hidden:e.props.value!==w})}))))}function u(e){var t=(0,o.Z)();return r.createElement(d,(0,n.Z)({key:String(t)},e))}},188:function(e,t,a){a.r(t),a.d(t,{frontMatter:function(){return d},contentTitle:function(){return u},metadata:function(){return p},toc:function(){return m},default:function(){return f}});var n=a(7462),r=a(3366),o=(a(7294),a(3905)),i=a(9877),l=a(8215),s=["components"],d={title:"Database Seeding"},u="Database Seeding",p={unversionedId:"config/db_seeding",id:"config/db_seeding",title:"Database Seeding",description:"When spawning environments, you might want your databases to be populated with data before starting to use the environment.",source:"@site/docs/config/db_seeding.md",sourceDirName:"config",slug:"/config/db_seeding",permalink:"/docs/config/db_seeding",tags:[],version:"current",frontMatter:{title:"Database Seeding"},sidebar:"tutorialSidebar",previous:{title:"Warmup Script",permalink:"/docs/config/warmup"},next:{title:"Key Concepts",permalink:"/docs/concepts"}},m=[{value:"Seeding Methods",id:"seeding-methods",children:[{value:"PostgreSQL",id:"postgresql",children:[],level:3},{value:"MongoDB",id:"mongodb",children:[],level:3},{value:"Custom Script",id:"custom-script",children:[{value:"keyProvider",id:"keyprovider",children:[],level:4},{value:"Sample Code",id:"sample-code",children:[],level:4}],level:3}],level:2},{value:"<code>raftt data</code> command",id:"raftt-data-command",children:[],level:2},{value:"Reloading a Service",id:"reloading-a-service",children:[],level:2}],c={toc:m};function f(e){var t=e.components,a=(0,r.Z)(e,s);return(0,o.kt)("wrapper",(0,n.Z)({},c,a,{components:t,mdxType:"MDXLayout"}),(0,o.kt)("h1",{id:"database-seeding"},"Database Seeding"),(0,o.kt)("p",null,"When spawning environments, you might want your databases to be populated with data before starting to use the environment.",(0,o.kt)("br",{parentName:"p"}),"\n","To allow this, Raftt supports database seeding that is defined as a part of the ",(0,o.kt)("a",{parentName:"p",href:"./raftt.yml"},"raftt.yml")," file.  "),(0,o.kt)("h2",{id:"seeding-methods"},"Seeding Methods"),(0,o.kt)("p",null,"Raftt currently supports three seeding methods -"),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},"A builtin method to load a ",(0,o.kt)("inlineCode",{parentName:"li"},".sql")," dump file into a PostgresSQL database"),(0,o.kt)("li",{parentName:"ul"},"A builtin method to load a ",(0,o.kt)("inlineCode",{parentName:"li"},".archive")," dump file into MongoDB"),(0,o.kt)("li",{parentName:"ul"},"A om user-created script that seeds the databases")),(0,o.kt)("h3",{id:"postgresql"},"PostgreSQL"),(0,o.kt)("p",null,"Load a database dump file as a PostgresSQL ",(0,o.kt)("inlineCode",{parentName:"p"},".sql")," file. To allow all team members to share the same initial database state, we recommend the dump file to be committed to the repo.",(0,o.kt)("br",{parentName:"p"}),"\n","This file can be created by ",(0,o.kt)("inlineCode",{parentName:"p"},"pg_dumpall")," or by running ",(0,o.kt)("a",{parentName:"p",href:"/docs/cli_reference#raftt-data-dump"},(0,o.kt)("inlineCode",{parentName:"a"},"raftt data dump")),"."),(0,o.kt)("p",null,"To configure seeding of a PostgresSQL database, configure it in the ",(0,o.kt)("a",{parentName:"p",href:"./raftt.yml"},"raftt.yml")," configuration file -"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-yaml"},"data:\n  - service: db\n    type: postgres\n    user: postgres # optional. Default=root\n    dump: dump.sql\n")),(0,o.kt)("h3",{id:"mongodb"},"MongoDB"),(0,o.kt)("p",null,"Load a database dump file as a MongoDB ",(0,o.kt)("inlineCode",{parentName:"p"},".archive")," file. To allow all team members to share the same initial database state, we recommend the dump file to be committed to the repo.",(0,o.kt)("br",{parentName:"p"}),"\n","This file can be created by ",(0,o.kt)("inlineCode",{parentName:"p"},"mongodump")," or by running ",(0,o.kt)("a",{parentName:"p",href:"/docs/cli_reference#raftt-data-dump"},(0,o.kt)("inlineCode",{parentName:"a"},"raftt data dump")),"."),(0,o.kt)("p",null,"To configure seeding of a MongoDB database, configure it in the ",(0,o.kt)("a",{parentName:"p",href:"./raftt.yml"},"raftt.yml")," configuration file -"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-yaml"},"data:\n  - service: db\n    type: mongodb\n    dump: dump.archive\n")),(0,o.kt)("h3",{id:"custom-script"},"Custom Script"),(0,o.kt)("p",null,"You can create a custom script if you don't use PostgresSQL or MongoDB or want a more customized database seeding experience.",(0,o.kt)("br",{parentName:"p"}),"\n","This allows complete control over how you wish to populate your databases, and is database type independent.",(0,o.kt)("br",{parentName:"p"}),"\n","Using the custom script support, Raftt supports advanced use-cases such as:"),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},"Loading a large dump from S3"),(0,o.kt)("li",{parentName:"ul"},"Auto-generating DB data")),(0,o.kt)("div",{className:"admonition admonition-caution alert alert--warning"},(0,o.kt)("div",{parentName:"div",className:"admonition-heading"},(0,o.kt)("h5",{parentName:"div"},(0,o.kt)("span",{parentName:"h5",className:"admonition-icon"},(0,o.kt)("svg",{parentName:"span",xmlns:"http://www.w3.org/2000/svg",width:"16",height:"16",viewBox:"0 0 16 16"},(0,o.kt)("path",{parentName:"svg",fillRule:"evenodd",d:"M8.893 1.5c-.183-.31-.52-.5-.887-.5s-.703.19-.886.5L.138 13.499a.98.98 0 0 0 0 1.001c.193.31.53.501.886.501h13.964c.367 0 .704-.19.877-.5a1.03 1.03 0 0 0 .01-1.002L8.893 1.5zm.133 11.497H6.987v-2.003h2.039v2.003zm0-3.004H6.987V5.987h2.039v4.006z"}))),"important")),(0,o.kt)("div",{parentName:"div",className:"admonition-content"},(0,o.kt)("p",{parentName:"div"},"The DB process is not guaranteed to be ready to accept connections before the script is executed.",(0,o.kt)("br",{parentName:"p"}),"\n","The script should wait for the DB and poll it."))),(0,o.kt)("p",null,"To configure custom seeding of your database, configure it in the ",(0,o.kt)("a",{parentName:"p",href:"./raftt.yml"},"raftt.yml")," configuration file -"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-yaml"},"data:\n  - service: db\n    type: script\n    script: db_seed.sh\n    keyProvider: key.sh # optional\n")),(0,o.kt)("h4",{id:"keyprovider"},"keyProvider"),(0,o.kt)("p",null,"Seeding the database using a seeding script can take a while, especially if it downloads large amounts of data. To save time, Raftt can fist check if the dump was already used.",(0,o.kt)("br",{parentName:"p"}),"\n","Raftt checks the dump's unique key created by running the script supplied as keyProvider.",(0,o.kt)("br",{parentName:"p"}),"\n","A simple example is a script that prints the hash of the dump file -"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-bash"},"shasum dump.sql\n")),(0,o.kt)("h4",{id:"sample-code"},"Sample Code"),(0,o.kt)("p",null,"The following code samples demonstrate how to poll different databases to make sure they are up and running, and then seed them."),(0,o.kt)(i.Z,{className:"unique-tabs",mdxType:"Tabs"},(0,o.kt)(l.Z,{value:"third",label:"MySQL",mdxType:"TabItem"},(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-bash"},'#!/usr/bin/env bash\nset -e\n\nDB_HOST=db\nDB_USER=root\nDB_PASSWORD=password\nDB_NAME=app_development\nDUMP_PATH=dump.sql\n\nretry() {\n    max_attempts="${1}"; shift\n    seconds="${1}"; shift\n    attempt_num=1\n\n    until "${@}"; do\n        if [ "$attempt_num" -eq "$max_attempts" ]\n        then\n            echo "Attempt $attempt_num failed and there are no more attempts left!"\n            exit 1\n        else\n            echo "Attempt $attempt_num failed! Trying again in $seconds seconds..."\n            attempt_num=$(( 1 + attempt_num ))\n            sleep "$seconds"\n        fi\n    done\n}\n\nretry 1>&2 "5" "1" mysqladmin -h $DB_HOST -u $DB_USER -p"$DB_PASSWORD" ping\n\nmysql -u $DB_USER -p"$DB_PASSWORD" -h $DB_HOST -e "DROP DATABASE IF EXISTS $DB_NAME;"\nmysql -u $DB_USER -p"$DB_PASSWORD" -h $DB_HOST -e "CREATE DATABASE $DB_NAME;"\nmysql -u $DB_USER -p"$DB_PASSWORD" -h $DB_HOST $DB_NAME < $DUMP_PATH\n'))),(0,o.kt)(l.Z,{value:"postgres",label:"postgresSQL",mdxType:"TabItem"},(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-bash"},'#!/usr/bin/env bash\nset -e\n\nDATABASE_URI=postgresql://postgres:password@db\nDUMP_PATH=dump.sql\n\nretry() {\n    max_attempts="${1}"; shift\n    seconds="${1}"; shift\n    attempt_num=1\n    \n    until "${@}"; do\n        if [ "$attempt_num" -eq "$max_attempts" ]\n        then\n            echo "Attempt $attempt_num failed and there are no more attempts left!"\n            exit 1\n        else\n            echo "Attempt $attempt_num failed! Trying again in $seconds seconds..."\n            attempt_num=$(( 1 + attempt_num ))\n            sleep "$seconds"\n        fi\n    done\n}\n\nretry 1>&2 "5" "1" pg_isready -d "$DATABASE_URI"\npsql -d "$DATABASE_URI" -f "$DUMP_PATH"\n'))),(0,o.kt)(l.Z,{value:"mongo",label:"MongoDB - **Remove?**",mdxType:"TabItem"},(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-bash"},"")))),(0,o.kt)("h2",{id:"raftt-data-command"},(0,o.kt)("inlineCode",{parentName:"h2"},"raftt data")," command"),(0,o.kt)("p",null,"To explicitly initiate actions on the databases - dump, save, load, and seed, you can use the ",(0,o.kt)("a",{parentName:"p",href:"../cli_reference#raftt-data"},(0,o.kt)("inlineCode",{parentName:"a"},"raftt data"))," command."),(0,o.kt)("h2",{id:"reloading-a-service"},"Reloading a Service"),(0,o.kt)("p",null,"When reloading a service using the ",(0,o.kt)("a",{parentName:"p",href:"../cli_reference#raftt-reload"},(0,o.kt)("inlineCode",{parentName:"a"},"raftt reload")),", the default behavior is ",(0,o.kt)("strong",{parentName:"p"},"not")," to reseed the databases that are defined in ",(0,o.kt)("a",{parentName:"p",href:"./raftt.yml"},"raftt.yml"),", but keep the state as-is.",(0,o.kt)("br",{parentName:"p"}),"\n","To reseed the databases when reloading a service them, use ",(0,o.kt)("a",{parentName:"p",href:"../cli_reference#raftt-reload"},(0,o.kt)("inlineCode",{parentName:"a"},"raftt reload -r"))))}f.isMDXComponent=!0}}]);