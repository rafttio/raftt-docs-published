"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[321],{3905:(e,t,n)=>{n.d(t,{Zo:()=>c,kt:()=>g});var a=n(7294);function r(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function o(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function i(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?o(Object(n),!0).forEach((function(t){r(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):o(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function u(e,t){if(null==e)return{};var n,a,r=function(e,t){if(null==e)return{};var n,a,r={},o=Object.keys(e);for(a=0;a<o.length;a++)n=o[a],t.indexOf(n)>=0||(r[n]=e[n]);return r}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(a=0;a<o.length;a++)n=o[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(r[n]=e[n])}return r}var l=a.createContext({}),s=function(e){var t=a.useContext(l),n=t;return e&&(n="function"==typeof e?e(t):i(i({},t),e)),n},c=function(e){var t=s(e.components);return a.createElement(l.Provider,{value:t},e.children)},d={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},p=a.forwardRef((function(e,t){var n=e.components,r=e.mdxType,o=e.originalType,l=e.parentName,c=u(e,["components","mdxType","originalType","parentName"]),p=s(n),g=r,m=p["".concat(l,".").concat(g)]||p[g]||d[g]||o;return n?a.createElement(m,i(i({ref:t},c),{},{components:n})):a.createElement(m,i({ref:t},c))}));function g(e,t){var n=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var o=n.length,i=new Array(o);i[0]=p;var u={};for(var l in t)hasOwnProperty.call(t,l)&&(u[l]=t[l]);u.originalType=e,u.mdxType="string"==typeof e?e:r,i[1]=u;for(var s=2;s<o;s++)i[s]=n[s];return a.createElement.apply(null,i)}return a.createElement.apply(null,n)}p.displayName="MDXCreateElement"},5162:(e,t,n)=>{n.d(t,{Z:()=>i});var a=n(7294),r=n(4334);const o="tabItem_Ymn6";function i(e){let{children:t,hidden:n,className:i}=e;return a.createElement("div",{role:"tabpanel",className:(0,r.Z)(o,i),hidden:n},t)}},4866:(e,t,n)=>{n.d(t,{Z:()=>T});var a=n(7462),r=n(7294),o=n(4334),i=n(2466),u=n(6775),l=n(1980),s=n(7392),c=n(12);function d(e){return function(e){var t;return(null==(t=r.Children.map(e,(e=>{if(!e||(0,r.isValidElement)(e)&&function(e){const{props:t}=e;return!!t&&"object"==typeof t&&"value"in t}(e))return e;throw new Error(`Docusaurus error: Bad <Tabs> child <${"string"==typeof e.type?e.type:e.type.name}>: all children of the <Tabs> component should be <TabItem>, and every <TabItem> should have a unique "value" prop.`)})))?void 0:t.filter(Boolean))??[]}(e).map((e=>{let{props:{value:t,label:n,attributes:a,default:r}}=e;return{value:t,label:n,attributes:a,default:r}}))}function p(e){const{values:t,children:n}=e;return(0,r.useMemo)((()=>{const e=t??d(n);return function(e){const t=(0,s.l)(e,((e,t)=>e.value===t.value));if(t.length>0)throw new Error(`Docusaurus error: Duplicate values "${t.map((e=>e.value)).join(", ")}" found in <Tabs>. Every value needs to be unique.`)}(e),e}),[t,n])}function g(e){let{value:t,tabValues:n}=e;return n.some((e=>e.value===t))}function m(e){let{queryString:t=!1,groupId:n}=e;const a=(0,u.k6)(),o=function(e){let{queryString:t=!1,groupId:n}=e;if("string"==typeof t)return t;if(!1===t)return null;if(!0===t&&!n)throw new Error('Docusaurus error: The <Tabs> component groupId prop is required if queryString=true, because this value is used as the search param name. You can also provide an explicit value such as queryString="my-search-param".');return n??null}({queryString:t,groupId:n});return[(0,l._X)(o),(0,r.useCallback)((e=>{if(!o)return;const t=new URLSearchParams(a.location.search);t.set(o,e),a.replace({...a.location,search:t.toString()})}),[o,a])]}function f(e){const{defaultValue:t,queryString:n=!1,groupId:a}=e,o=p(e),[i,u]=(0,r.useState)((()=>function(e){let{defaultValue:t,tabValues:n}=e;if(0===n.length)throw new Error("Docusaurus error: the <Tabs> component requires at least one <TabItem> children component");if(t){if(!g({value:t,tabValues:n}))throw new Error(`Docusaurus error: The <Tabs> has a defaultValue "${t}" but none of its children has the corresponding value. Available values are: ${n.map((e=>e.value)).join(", ")}. If you intend to show no default tab, use defaultValue={null} instead.`);return t}const a=n.find((e=>e.default))??n[0];if(!a)throw new Error("Unexpected error: 0 tabValues");return a.value}({defaultValue:t,tabValues:o}))),[l,s]=m({queryString:n,groupId:a}),[d,f]=function(e){let{groupId:t}=e;const n=function(e){return e?`docusaurus.tab.${e}`:null}(t),[a,o]=(0,c.Nk)(n);return[a,(0,r.useCallback)((e=>{n&&o.set(e)}),[n,o])]}({groupId:a}),h=(()=>{const e=l??d;return g({value:e,tabValues:o})?e:null})();(0,r.useLayoutEffect)((()=>{h&&u(h)}),[h]);return{selectedValue:i,selectValue:(0,r.useCallback)((e=>{if(!g({value:e,tabValues:o}))throw new Error(`Can't select invalid tab value=${e}`);u(e),s(e),f(e)}),[s,f,o]),tabValues:o}}var h=n(2389);const b="tabList__CuJ",y="tabItem_LNqP";function k(e){let{className:t,block:n,selectedValue:u,selectValue:l,tabValues:s}=e;const c=[],{blockElementScrollPositionUntilNextRender:d}=(0,i.o5)(),p=e=>{const t=e.currentTarget,n=c.indexOf(t),a=s[n].value;a!==u&&(d(t),l(a))},g=e=>{var t;let n=null;switch(e.key){case"Enter":p(e);break;case"ArrowRight":{const t=c.indexOf(e.currentTarget)+1;n=c[t]??c[0];break}case"ArrowLeft":{const t=c.indexOf(e.currentTarget)-1;n=c[t]??c[c.length-1];break}}null==(t=n)||t.focus()};return r.createElement("ul",{role:"tablist","aria-orientation":"horizontal",className:(0,o.Z)("tabs",{"tabs--block":n},t)},s.map((e=>{let{value:t,label:n,attributes:i}=e;return r.createElement("li",(0,a.Z)({role:"tab",tabIndex:u===t?0:-1,"aria-selected":u===t,key:t,ref:e=>c.push(e),onKeyDown:g,onClick:p},i,{className:(0,o.Z)("tabs__item",y,null==i?void 0:i.className,{"tabs__item--active":u===t})}),n??t)})))}function v(e){let{lazy:t,children:n,selectedValue:a}=e;const o=(Array.isArray(n)?n:[n]).filter(Boolean);if(t){const e=o.find((e=>e.props.value===a));return e?(0,r.cloneElement)(e,{className:"margin-top--md"}):null}return r.createElement("div",{className:"margin-top--md"},o.map(((e,t)=>(0,r.cloneElement)(e,{key:t,hidden:e.props.value!==a}))))}function w(e){const t=f(e);return r.createElement("div",{className:(0,o.Z)("tabs-container",b)},r.createElement(k,(0,a.Z)({},e,t)),r.createElement(v,(0,a.Z)({},e,t)))}function T(e){const t=(0,h.Z)();return r.createElement(w,(0,a.Z)({key:String(t)},e))}},9248:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>c,contentTitle:()=>l,default:()=>g,frontMatter:()=>u,metadata:()=>s,toc:()=>d});var a=n(7462),r=(n(7294),n(3905)),o=n(4866),i=n(5162);const u={title:"Python"},l="Python Debugging",s={unversionedId:"debugging/python",id:"debugging/python",title:"Python",description:"Raftt supports interactive Python debugging using JetBrains IDEs and VS Code.",source:"@site/docs/debugging/python.md",sourceDirName:"debugging",slug:"/debugging/python",permalink:"/debugging/python",draft:!1,tags:[],version:"current",frontMatter:{title:"Python"},sidebar:"tutorialSidebar",previous:{title:"Go",permalink:"/debugging/go"},next:{title:"Java",permalink:"/debugging/java"}},c={},d=[{value:"Configuration",id:"configuration",level:2},{value:"Debugging",id:"debugging",level:2}],p={toc:d};function g(e){let{components:t,...n}=e;return(0,r.kt)("wrapper",(0,a.Z)({},p,n,{components:t,mdxType:"MDXLayout"}),(0,r.kt)("h1",{id:"python-debugging"},"Python Debugging"),(0,r.kt)("p",null,"Raftt supports interactive Python debugging using JetBrains IDEs and VS Code."),(0,r.kt)("p",null,"To debug with Raftt, you must first install Raftt's IDE plugin. See ",(0,r.kt)("a",{parentName:"p",href:"/intro/installation#raftt-ide-plugin"},"here")," for installation instructions."),(0,r.kt)("h2",{id:"configuration"},"Configuration"),(0,r.kt)("p",null,"The configuration differs between different IDEs."),(0,r.kt)(o.Z,{className:"unique-tabs",groupId:"IDEs",mdxType:"Tabs"},(0,r.kt)(i.Z,{value:"JetBrains",label:"JetBrains IDEs",default:!0,mdxType:"TabItem"},(0,r.kt)("p",null,'To debug with Raftt, start by defining a "standard" debug configuration, as if you would debug the process locally. For help creating such a configuration, see JetBrains ',(0,r.kt)("a",{parentName:"p",href:"https://www.jetbrains.com/help/idea/run-debug-configuration-python.html"},"docs"),"."),(0,r.kt)("p",null,"Then, you only need to add a single env var called ",(0,r.kt)("inlineCode",{parentName:"p"},"RAFTT_WORKLOAD")," stating the workload to debug. For example, here you can see the configuration for debugging the ",(0,r.kt)("inlineCode",{parentName:"p"},"recommendations")," service, as a part of our ",(0,r.kt)("a",{parentName:"p",href:"/basics/tutorials/connect_mode"},"tutorial")," -"),(0,r.kt)("p",{align:"center"},(0,r.kt)("img",{src:"https://raftt-resources.s3.eu-central-1.amazonaws.com/docs/debugging/jetbrains/python.png",alt:"Python run/debug config in IntelliJ"})),(0,r.kt)("details",null,(0,r.kt)("summary",null,(0,r.kt)("h3",{style:{marginBottom:0}},"Debugging a sidecar container")),(0,r.kt)("p",null,"To debug a sidecar container, add an additional env var - ",(0,r.kt)("inlineCode",{parentName:"p"},"RAFTT_CONTAINER"),", whose value is the debugged container name. If not stated, the selected container is the workload's main container - either the one annotated as default, or if no container is annotated - the first one in the manifest.")),(0,r.kt)("admonition",{title:"Note",type:"info"},(0,r.kt)("p",{parentName:"admonition"},"The Python interpreter that is used while debugging is the one installed in the remote container, not the one in the run/debug config.",(0,r.kt)("br",{parentName:"p"}),"\n","You can even omit its definition, but you'll get a warning message you'll have to skip every time you run/debug with Raftt.")),(0,r.kt)("admonition",{type:"tip"},(0,r.kt)("p",{parentName:"admonition"},'To easily share your run/debug configuration with the rest of the team, mark the "store as project file" checkbox and commit the new file, typically located under ',(0,r.kt)("inlineCode",{parentName:"p"},".run"),", to the repo."))),(0,r.kt)(i.Z,{value:"VSCode",label:"VS Code",mdxType:"TabItem"},(0,r.kt)("p",null,'To debug with Raftt, start by defining a "standard" debug configuration in your ',(0,r.kt)("inlineCode",{parentName:"p"},"launch.json")," file, as if you would debug the process locally. For help creating such a configuration, see VS Code ",(0,r.kt)("a",{parentName:"p",href:"https://code.visualstudio.com/docs/python/debugging"},"docs"),"."),(0,r.kt)("p",null,"Then, add the ",(0,r.kt)("inlineCode",{parentName:"p"},"raftt")," attribute to the debug config. This attribute has a single property, stating the ",(0,r.kt)("inlineCode",{parentName:"p"},"workload")," to debug."),(0,r.kt)("p",null,"In addition, the default working dir by VS Code is the workspace folder (usually the repo root). If this dir isn't mounted to the container, you must specify a different ",(0,r.kt)("inlineCode",{parentName:"p"},"cwd"),"."),(0,r.kt)("p",null,"For example, here you can see the configuration for debugging the ",(0,r.kt)("inlineCode",{parentName:"p"},"recommendations")," service, as a part of our ",(0,r.kt)("a",{parentName:"p",href:"/basics/tutorials/connect_mode"},"tutorial")," -"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-json"},'{\n    "name": "recommendations",\n    "type": "python",\n    "request": "launch",\n    "program": "${workspaceFolder}/src/recommendationservice/recommendation_server.py",\n    "cwd": "${workspaceFolder}/src/recommendationservice",\n    "raftt": {\n        "workload": "recommendations"\n    }\n}\n')),(0,r.kt)("details",null,(0,r.kt)("summary",null,(0,r.kt)("h3",{style:{marginBottom:0}},"Debugging a sidecar container")),(0,r.kt)("p",null,"To debug a sidecar container, add a property to the ",(0,r.kt)("inlineCode",{parentName:"p"},"raftt")," attribute - ",(0,r.kt)("inlineCode",{parentName:"p"},"container"),", whose value is the debugged container name. If not stated, the selected container is the workload's main container - either the one annotated as default, or if no container is annotated - the first one in the manifest."),(0,r.kt)("p",null,"Here you can see how to debug a container named ",(0,r.kt)("inlineCode",{parentName:"p"},"sidecar")," (that doesn't really exist in our sample project) -"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-json"},'{\n    "name": "recommendations",\n    "type": "python",\n    "request": "launch",\n    "program": "${workspaceFolder}/src/recommendationservice/recommendation_server.py",\n    "cwd": "${workspaceFolder}/src/recommendationservice",\n    "raftt": {\n        "workload": "recommendations",\n        "container": "sidecar"\n    }\n}\n'))),(0,r.kt)("admonition",{type:"tip"},(0,r.kt)("p",{parentName:"admonition"},"To easily share your run/debug configuration with team members, make sure your ",(0,r.kt)("inlineCode",{parentName:"p"},"launch.json")," file is committed to the project repo.")))),(0,r.kt)("h2",{id:"debugging"},"Debugging"),(0,r.kt)("p",null,"Once you completed the configuration, you can experience fully-featured interactive debugging directly in your cluster, including breakpoints, stepping, watching and modifying variables, etc..",(0,r.kt)("br",{parentName:"p"}),"\n","The method for starting a run/debug session with Raftt differs between different IDEs - "),(0,r.kt)(o.Z,{className:"unique-tabs",groupId:"IDEs",mdxType:"Tabs"},(0,r.kt)(i.Z,{value:"JetBrains",label:"JetBrains IDEs",default:!0,mdxType:"TabItem"},(0,r.kt)("p",null,"To start a run/debug session with Raftt, use the ",(0,r.kt)("inlineCode",{parentName:"p"},"Run with Raftt")," or ",(0,r.kt)("inlineCode",{parentName:"p"},"Debug with Raftt")," blue buttons, or select these options from the ",(0,r.kt)("inlineCode",{parentName:"p"},"Run")," menu."),(0,r.kt)("p",{align:"center"},(0,r.kt)("img",{src:"https://raftt-resources.s3.eu-central-1.amazonaws.com/docs/debugging/jetbrains/debug_buttons.png",alt:"Run/debug with Raftt buttons in IntelliJ"}))),(0,r.kt)(i.Z,{value:"VSCode",label:"VS Code",mdxType:"TabItem"},(0,r.kt)("p",null,"Starting a run/debug session with a configuration that has the ",(0,r.kt)("inlineCode",{parentName:"p"},"raftt")," attribute will automatically start a Raftt debugging session. This can be triggered using the debugging pane in the side bar, keyboard shortcuts or the command palette."))))}g.isMDXComponent=!0}}]);