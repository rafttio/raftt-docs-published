"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[71],{3905:function(e,t,n){n.d(t,{Zo:function(){return c},kt:function(){return u}});var o=n(7294);function r(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function a(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);t&&(o=o.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,o)}return n}function i(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?a(Object(n),!0).forEach((function(t){r(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):a(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function l(e,t){if(null==e)return{};var n,o,r=function(e,t){if(null==e)return{};var n,o,r={},a=Object.keys(e);for(o=0;o<a.length;o++)n=a[o],t.indexOf(n)>=0||(r[n]=e[n]);return r}(e,t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(o=0;o<a.length;o++)n=a[o],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(r[n]=e[n])}return r}var s=o.createContext({}),d=function(e){var t=o.useContext(s),n=t;return e&&(n="function"==typeof e?e(t):i(i({},t),e)),n},c=function(e){var t=d(e.components);return o.createElement(s.Provider,{value:t},e.children)},f={inlineCode:"code",wrapper:function(e){var t=e.children;return o.createElement(o.Fragment,{},t)}},p=o.forwardRef((function(e,t){var n=e.components,r=e.mdxType,a=e.originalType,s=e.parentName,c=l(e,["components","mdxType","originalType","parentName"]),p=d(n),u=r,m=p["".concat(s,".").concat(u)]||p[u]||f[u]||a;return n?o.createElement(m,i(i({ref:t},c),{},{components:n})):o.createElement(m,i({ref:t},c))}));function u(e,t){var n=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var a=n.length,i=new Array(a);i[0]=p;var l={};for(var s in t)hasOwnProperty.call(t,s)&&(l[s]=t[s]);l.originalType=e,l.mdxType="string"==typeof e?e:r,i[1]=l;for(var d=2;d<a;d++)i[d]=n[d];return o.createElement.apply(null,i)}return o.createElement.apply(null,n)}p.displayName="MDXCreateElement"},8391:function(e,t,n){n.r(t),n.d(t,{assets:function(){return c},contentTitle:function(){return s},default:function(){return u},frontMatter:function(){return l},metadata:function(){return d},toc:function(){return f}});var o=n(7462),r=n(3366),a=(n(7294),n(3905)),i=["components"],l={title:"Dev-mode"},s="Developer mode",d={unversionedId:"concepts/dev_mode",id:"concepts/dev_mode",title:"Dev-mode",description:"This page is only relevant if you use Raftt for improving the developer experience of dev envs created by other tools, and not for orchestrating dev envs.",source:"@site/docs/concepts/dev_mode.md",sourceDirName:"concepts",slug:"/concepts/dev_mode",permalink:"/concepts/dev_mode",draft:!1,tags:[],version:"current",frontMatter:{title:"Dev-mode"},sidebar:"tutorialSidebar",previous:{title:"Key Concepts",permalink:"/concepts"},next:{title:"Git Workflow Integration",permalink:"/concepts/git_workflows"}},c={},f=[{value:"Workflow",id:"workflow",level:2},{value:"<code>raftt connect</code>",id:"raftt-connect",level:3},{value:"<code>raftt dev</code>",id:"raftt-dev",level:3},{value:"<code>raftt dev -u</code>",id:"raftt-dev--u",level:3},{value:"<code>raftt cleanup</code>",id:"raftt-cleanup",level:3}],p={toc:f};function u(e){var t=e.components,n=(0,r.Z)(e,i);return(0,a.kt)("wrapper",(0,o.Z)({},p,n,{components:t,mdxType:"MDXLayout"}),(0,a.kt)("h1",{id:"developer-mode"},"Developer mode"),(0,a.kt)("admonition",{title:"Note",type:"info"},(0,a.kt)("p",{parentName:"admonition"},"This page is only relevant if you use Raftt for improving the developer experience of dev envs created by other tools, and not for orchestrating dev envs.")),(0,a.kt)("p",null,"When used in connect mode, Raftt is used for adding a development features layer on top of existing envs created and managed by other tools."),(0,a.kt)("p",null,"To make resources, especially workloads, easy to use for development, they need to change. Some of these changes are performed automatically by Raftt without any config from the user, and some are configured for the specific resource. When these changes are applied to a resource, we say it's moved into dev-mode, or ",(0,a.kt)("em",{parentName:"p"},"devified"),", and when it returns to it's original state, we say it's moving out of dev-mode, or ",(0,a.kt)("em",{parentName:"p"},"undevified"),"."),(0,a.kt)("p",null,"Dev envs should be as similar as possible to production, while keeping them easy to develop. To handle this tradeoff, Raftt only transforms the specific resources the users want, while keeping the other just like in production."),(0,a.kt)("h2",{id:"workflow"},"Workflow"),(0,a.kt)("h3",{id:"raftt-connect"},(0,a.kt)("inlineCode",{parentName:"h3"},"raftt connect")),(0,a.kt)("p",null,"When starting to work with Raftt in an env, the first thing you need to is run the ",(0,a.kt)("inlineCode",{parentName:"p"},"raftt connect")," command from the directory of the repo that's deployed in the env. The command works add Raftt's infra to the specified namespace and makes it ready for getting resources into dev-mode. The command does the following -"),(0,a.kt)("ol",null,(0,a.kt)("li",{parentName:"ol"},"Raftt's env controller is added to your namespace (a deployment named sandcastle)."),(0,a.kt)("li",{parentName:"ol"},"Your repo is mirrored to the cluster and live syncing is started."),(0,a.kt)("li",{parentName:"ol"},"You can start using ",(0,a.kt)("inlineCode",{parentName:"li"},"raftt sh")," and ",(0,a.kt)("inlineCode",{parentName:"li"},"raftt logs")," commands to inspect all your workloads.")),(0,a.kt)("h3",{id:"raftt-dev"},(0,a.kt)("inlineCode",{parentName:"h3"},"raftt dev")),(0,a.kt)("p",null,"As explained before, to convert resources into their dev-mode configuration, you must run ",(0,a.kt)("inlineCode",{parentName:"p"},"raftt dev")," for the specific resources. All resources can be converted dev-mode, but it's usually most usefull for workloads. For that reason, if there are multiple resources with the same name and the kind isn't specified, the ",(0,a.kt)("inlineCode",{parentName:"p"},"dev")," command assumes you intended to devify the workload. To specify a non-workload resource, use the ",(0,a.kt)("inlineCode",{parentName:"p"},"<resource_kind>/<resource_name>")," notation."),(0,a.kt)("p",null,"When entering dev-mode, the following actions occur -"),(0,a.kt)("ol",null,(0,a.kt)("li",{parentName:"ol"},"The dev-mode definitions of the specified resources are read from the ",(0,a.kt)("a",{parentName:"li",href:"/config/rafttfile"},".raftt")," file."),(0,a.kt)("li",{parentName:"ol"},"The specified resource taken down (scaled down to 0 replicas in case of deployments) and new resources are spawned according to the new definitions."),(0,a.kt)("li",{parentName:"ol"},"If the specified resources are workloads, they differ from the old ones in the following characteristics -",(0,a.kt)("ol",{parentName:"li"},(0,a.kt)("li",{parentName:"ol"},"Their name has the suffix ",(0,a.kt)("inlineCode",{parentName:"li"},"-raftt"),". This isn't relevant for pods who are treated like a non-workload deployment in this context."),(0,a.kt)("li",{parentName:"ol"},"The lifecycle of the container is split from the lifecycle of its main process. You can restart the process without respawning the container, and the main process crashing doesn't result in the termination of the container, allowing much better inspection. See ",(0,a.kt)("a",{parentName:"li",href:"/concepts/containers"},"here")," for more information."),(0,a.kt)("li",{parentName:"ol"},"Any changes defined in the ",(0,a.kt)("inlineCode",{parentName:"li"},".raftt")," file for the specified resources are applied. This usually includes -",(0,a.kt)("ol",{parentName:"li"},(0,a.kt)("li",{parentName:"ol"},"Code is now continuously synced to the container, allowing you to write code in you favorite local IDE and see the changes affect the cluster."),(0,a.kt)("li",{parentName:"ol"},"Port are mapped from the workloads to localhost, allowing easy access."),(0,a.kt)("li",{parentName:"ol"},"Any other change that makes it better for development."))),(0,a.kt)("li",{parentName:"ol"},"You can now run all raftt commands that are relevant to workloads, e.g. ",(0,a.kt)("inlineCode",{parentName:"li"},"restart")," and ",(0,a.kt)("inlineCode",{parentName:"li"},"rebuild"),"."))),(0,a.kt)("li",{parentName:"ol"},"All the rest of the namespace resources (those not specified in the ",(0,a.kt)("inlineCode",{parentName:"li"},"dev"),"/",(0,a.kt)("inlineCode",{parentName:"li"},"rebuild")," command) remain unchanged.")),(0,a.kt)("h3",{id:"raftt-dev--u"},(0,a.kt)("inlineCode",{parentName:"h3"},"raftt dev -u")),(0,a.kt)("p",null,(0,a.kt)("inlineCode",{parentName:"p"},"-u"),", short for ",(0,a.kt)("inlineCode",{parentName:"p"},"--undev"),", reverts any changes performed to a specified resource during and following its devification. When devifying a resource, Raftt saves the current state and returns to it when undevifying."),(0,a.kt)("admonition",{type:"warning"},(0,a.kt)("p",{parentName:"admonition"},(0,a.kt)("inlineCode",{parentName:"p"},"raftt dev -u")," reverts ",(0,a.kt)("strong",{parentName:"p"},"all")," changes to the resource, even those not performed by Raftt commands. It means that if any external tool modified devified resources, running ",(0,a.kt)("inlineCode",{parentName:"p"},"raftt dev -u")," is expected to revert the changes.")),(0,a.kt)("p",null,(0,a.kt)("inlineCode",{parentName:"p"},"dev -u")," can be run on a specific workloads or without specifying anything, which results in undevifying every devified resource."),(0,a.kt)("h3",{id:"raftt-cleanup"},(0,a.kt)("inlineCode",{parentName:"h3"},"raftt cleanup")),(0,a.kt)("p",null,"This command removes everything that raftt added/modified in the env. It first undevs all resources and then cleans all the infra added in ",(0,a.kt)("inlineCode",{parentName:"p"},"raftt connect"),". If undevifying any resource failed, or that Raftt CLI isn't connected to the specified namespace, the infra isn't removed, unless the ",(0,a.kt)("inlineCode",{parentName:"p"},"--force")," flag is specified. If this flag is specified, all resources left raftt failed to undev are forcibly removed along with all of Raftt's infra."))}u.isMDXComponent=!0}}]);