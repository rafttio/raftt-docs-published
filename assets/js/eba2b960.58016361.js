"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[873],{3905:function(e,t,n){n.d(t,{Zo:function(){return c},kt:function(){return g}});var a=n(7294);function r(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function o(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function i(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?o(Object(n),!0).forEach((function(t){r(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):o(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function u(e,t){if(null==e)return{};var n,a,r=function(e,t){if(null==e)return{};var n,a,r={},o=Object.keys(e);for(a=0;a<o.length;a++)n=o[a],t.indexOf(n)>=0||(r[n]=e[n]);return r}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(a=0;a<o.length;a++)n=o[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(r[n]=e[n])}return r}var l=a.createContext({}),d=function(e){var t=a.useContext(l),n=t;return e&&(n="function"==typeof e?e(t):i(i({},t),e)),n},c=function(e){var t=d(e.components);return a.createElement(l.Provider,{value:t},e.children)},s={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},p=a.forwardRef((function(e,t){var n=e.components,r=e.mdxType,o=e.originalType,l=e.parentName,c=u(e,["components","mdxType","originalType","parentName"]),p=d(n),g=r,f=p["".concat(l,".").concat(g)]||p[g]||s[g]||o;return n?a.createElement(f,i(i({ref:t},c),{},{components:n})):a.createElement(f,i({ref:t},c))}));function g(e,t){var n=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var o=n.length,i=new Array(o);i[0]=p;var u={};for(var l in t)hasOwnProperty.call(t,l)&&(u[l]=t[l]);u.originalType=e,u.mdxType="string"==typeof e?e:r,i[1]=u;for(var d=2;d<o;d++)i[d]=n[d];return a.createElement.apply(null,i)}return a.createElement.apply(null,n)}p.displayName="MDXCreateElement"},2243:function(e,t,n){n.r(t),n.d(t,{assets:function(){return c},contentTitle:function(){return l},default:function(){return g},frontMatter:function(){return u},metadata:function(){return d},toc:function(){return s}});var a=n(7462),r=n(3366),o=(n(7294),n(3905)),i=["components"],u={title:"Java"},l="Java Debugging",d={unversionedId:"debugging/java",id:"debugging/java",title:"Java",description:"Raftt supports interactive debugging for Java (and other JVM-based languages) using JetBrains IntelliJ. Support for VS Code is coming soon!",source:"@site/docs/debugging/java.md",sourceDirName:"debugging",slug:"/debugging/java",permalink:"/debugging/java",draft:!1,tags:[],version:"current",frontMatter:{title:"Java"},sidebar:"tutorialSidebar",previous:{title:"Python",permalink:"/debugging/python"},next:{title:".NET",permalink:"/debugging/dotnet"}},c={},s=[{value:"Configuration",id:"configuration",level:2},{value:"Add a builder container",id:"add-a-builder-container",level:3},{value:"Create a run/debug configuration",id:"create-a-rundebug-configuration",level:3},{value:"Create a before launch task",id:"create-a-before-launch-task",level:3}],p={toc:s};function g(e){var t=e.components,n=(0,r.Z)(e,i);return(0,o.kt)("wrapper",(0,a.Z)({},p,n,{components:t,mdxType:"MDXLayout"}),(0,o.kt)("h1",{id:"java-debugging"},"Java Debugging"),(0,o.kt)("p",null,"Raftt supports interactive debugging for Java (and other JVM-based languages) using JetBrains IntelliJ. Support for VS Code is coming soon!"),(0,o.kt)("p",null,"To debug with Raftt, you must first install Raftt's IDE plugin. See ",(0,o.kt)("a",{parentName:"p",href:"/intro/installation#raftt-ide-plugin"},"here")," for installation instructions."),(0,o.kt)("h2",{id:"configuration"},"Configuration"),(0,o.kt)("p",null,"To configure Java debugging you need to define two things -"),(0,o.kt)("ol",null,(0,o.kt)("li",{parentName:"ol"},"Where and when to compile your Java app",(0,o.kt)("ol",{parentName:"li"},(0,o.kt)("li",{parentName:"ol"},"Add a builder container to the workload"),(0,o.kt)("li",{parentName:"ol"},"Define a before launch task"))),(0,o.kt)("li",{parentName:"ol"},"Create a run/debug configuration")),(0,o.kt)("h3",{id:"add-a-builder-container"},"Add a builder container"),(0,o.kt)("p",null,"The best way to let your env compile the Java app without modifying your application container is by adding a builder container to the pod. This can be easily defined in your ",(0,o.kt)("inlineCode",{parentName:"p"},".raftt")," file. Here you can see the configuration for adding a builder container to the ",(0,o.kt)("inlineCode",{parentName:"p"},"ads")," service of our ",(0,o.kt)("a",{parentName:"p",href:"/basics/tutorials/connect_mode"},"sample project")," -"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-python"},'ads = resources.deployments["ads"]\n\n# Define the container and add it to the workload\nbuilder = Container(yaml="""\nname: builder\nimage: openjdk:latest\nworkingDir: /src\n""")\nads.spec.template.spec.containers.append(builder)\n\n# Mount the source code and the compiled artifact folder to\n# both the application container and the builder container\nads_out = volume("ads-out")\nads.mount(repo_root.subpath("src/adservice/src"), "/src", container="builder")\nads.mount(repo_root.subpath("src/adservice/src"), "/src")\nads.mount(ads_out, "/tmp/out", container="builder")\nads.mount(ads_out, "/app", init_on_rebuild=True)\n')),(0,o.kt)("admonition",{title:"important",type:"info"},(0,o.kt)("p",{parentName:"admonition"},"Make sure that the container has an image that can actually compile your JAR. For example, you'll need a different image to build JARs from Kotlin or Scala.")),(0,o.kt)("h3",{id:"create-a-rundebug-configuration"},"Create a run/debug configuration"),(0,o.kt)("p",null,"To debug with Raftt, start by defining a run/debug configuration of the type ",(0,o.kt)("inlineCode",{parentName:"p"},"JAR Application")," (that's true even if you use build tools like Gradle or Maven). It should be configured like a ",(0,o.kt)("a",{parentName:"p",href:"https://www.jetbrains.com/help/idea/run-debug-configuration-jar.html"},"standard JAR application run/debug config"),", with the path in the debugged workload in the ",(0,o.kt)("inlineCode",{parentName:"p"},"path to JAR")," attribute. Then, add a single env var called ",(0,o.kt)("inlineCode",{parentName:"p"},"RAFTT_WORKLOAD")," stating the workload to debug."),(0,o.kt)("p",null,"Here you can see the configuration for the ",(0,o.kt)("inlineCode",{parentName:"p"},"ads")," service of our ",(0,o.kt)("a",{parentName:"p",href:"/basics/tutorials/connect_mode"},"sample project")," -"),(0,o.kt)("p",{align:"center"},(0,o.kt)("img",{src:"https://raftt-resources.s3.eu-central-1.amazonaws.com/docs/debugging/jetbrains/java.png",alt:"JAR application run/debug config in IntelliJ"})),(0,o.kt)("details",null,(0,o.kt)("summary",null,(0,o.kt)("h3",{style:{marginBottom:0}},"Debugging a sidecar container")),(0,o.kt)("p",null,"To debug a sidecar container, add an additional env var - ",(0,o.kt)("inlineCode",{parentName:"p"},"RAFTT_CONTAINER"),", whose value is the debugged container name. If not stated, the selected container is the workload's main container - either the one annotated as default, or if no container is annotated - the first one in the manifest.")),(0,o.kt)("h3",{id:"create-a-before-launch-task"},"Create a before launch task"),(0,o.kt)("p",null,"To recompile your code before every run/debug session, you need to define a ",(0,o.kt)("a",{parentName:"p",href:"https://www.jetbrains.com/help/idea/run-debug-configurations-dialog.html#before-launch-options"},"before launch task")," in you debug configuration. Create a task of the type ",(0,o.kt)("inlineCode",{parentName:"p"},"Run on Raftt Workload")," and define what build script to run and where -"),(0,o.kt)("p",{align:"center"},(0,o.kt)("img",{src:"https://raftt-resources.s3.eu-central-1.amazonaws.com/docs/debugging/jetbrains/java_before_launch.png",alt:"Run on Raftt Workload before launch task on IntelliJ"})),(0,o.kt)("admonition",{title:"Important",type:"info"},(0,o.kt)("p",{parentName:"admonition"},"Make sure to modify the command according to your language (e.g., Java, Kotlin, etc.) and build system (e.g. Gradle, Maven, etc.)")),(0,o.kt)("admonition",{type:"tip"},(0,o.kt)("p",{parentName:"admonition"},'To easily share your run/debug configuration with the rest of the team, mark the "store as project file" checkbox and commit the new file, typically located under ',(0,o.kt)("inlineCode",{parentName:"p"},".run"),", to the repo.")))}g.isMDXComponent=!0}}]);