"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[606],{3905:(e,t,n)=>{n.d(t,{Zo:()=>c,kt:()=>m});var a=n(7294);function o(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function r(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function i(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?r(Object(n),!0).forEach((function(t){o(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):r(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function l(e,t){if(null==e)return{};var n,a,o=function(e,t){if(null==e)return{};var n,a,o={},r=Object.keys(e);for(a=0;a<r.length;a++)n=r[a],t.indexOf(n)>=0||(o[n]=e[n]);return o}(e,t);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);for(a=0;a<r.length;a++)n=r[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(o[n]=e[n])}return o}var s=a.createContext({}),u=function(e){var t=a.useContext(s),n=t;return e&&(n="function"==typeof e?e(t):i(i({},t),e)),n},c=function(e){var t=u(e.components);return a.createElement(s.Provider,{value:t},e.children)},d={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},p=a.forwardRef((function(e,t){var n=e.components,o=e.mdxType,r=e.originalType,s=e.parentName,c=l(e,["components","mdxType","originalType","parentName"]),p=u(n),m=o,h=p["".concat(s,".").concat(m)]||p[m]||d[m]||r;return n?a.createElement(h,i(i({ref:t},c),{},{components:n})):a.createElement(h,i({ref:t},c))}));function m(e,t){var n=arguments,o=t&&t.mdxType;if("string"==typeof e||o){var r=n.length,i=new Array(r);i[0]=p;var l={};for(var s in t)hasOwnProperty.call(t,s)&&(l[s]=t[s]);l.originalType=e,l.mdxType="string"==typeof e?e:o,i[1]=l;for(var u=2;u<r;u++)i[u]=n[u];return a.createElement.apply(null,i)}return a.createElement.apply(null,n)}p.displayName="MDXCreateElement"},5162:(e,t,n)=>{n.d(t,{Z:()=>i});var a=n(7294),o=n(4334);const r="tabItem_Ymn6";function i(e){let{children:t,hidden:n,className:i}=e;return a.createElement("div",{role:"tabpanel",className:(0,o.Z)(r,i),hidden:n},t)}},4866:(e,t,n)=>{n.d(t,{Z:()=>N});var a=n(7462),o=n(7294),r=n(4334),i=n(2466),l=n(6775),s=n(1980),u=n(7392),c=n(12);function d(e){return function(e){var t;return(null==(t=o.Children.map(e,(e=>{if(!e||(0,o.isValidElement)(e)&&function(e){const{props:t}=e;return!!t&&"object"==typeof t&&"value"in t}(e))return e;throw new Error(`Docusaurus error: Bad <Tabs> child <${"string"==typeof e.type?e.type:e.type.name}>: all children of the <Tabs> component should be <TabItem>, and every <TabItem> should have a unique "value" prop.`)})))?void 0:t.filter(Boolean))??[]}(e).map((e=>{let{props:{value:t,label:n,attributes:a,default:o}}=e;return{value:t,label:n,attributes:a,default:o}}))}function p(e){const{values:t,children:n}=e;return(0,o.useMemo)((()=>{const e=t??d(n);return function(e){const t=(0,u.l)(e,((e,t)=>e.value===t.value));if(t.length>0)throw new Error(`Docusaurus error: Duplicate values "${t.map((e=>e.value)).join(", ")}" found in <Tabs>. Every value needs to be unique.`)}(e),e}),[t,n])}function m(e){let{value:t,tabValues:n}=e;return n.some((e=>e.value===t))}function h(e){let{queryString:t=!1,groupId:n}=e;const a=(0,l.k6)(),r=function(e){let{queryString:t=!1,groupId:n}=e;if("string"==typeof t)return t;if(!1===t)return null;if(!0===t&&!n)throw new Error('Docusaurus error: The <Tabs> component groupId prop is required if queryString=true, because this value is used as the search param name. You can also provide an explicit value such as queryString="my-search-param".');return n??null}({queryString:t,groupId:n});return[(0,s._X)(r),(0,o.useCallback)((e=>{if(!r)return;const t=new URLSearchParams(a.location.search);t.set(r,e),a.replace({...a.location,search:t.toString()})}),[r,a])]}function f(e){const{defaultValue:t,queryString:n=!1,groupId:a}=e,r=p(e),[i,l]=(0,o.useState)((()=>function(e){let{defaultValue:t,tabValues:n}=e;if(0===n.length)throw new Error("Docusaurus error: the <Tabs> component requires at least one <TabItem> children component");if(t){if(!m({value:t,tabValues:n}))throw new Error(`Docusaurus error: The <Tabs> has a defaultValue "${t}" but none of its children has the corresponding value. Available values are: ${n.map((e=>e.value)).join(", ")}. If you intend to show no default tab, use defaultValue={null} instead.`);return t}const a=n.find((e=>e.default))??n[0];if(!a)throw new Error("Unexpected error: 0 tabValues");return a.value}({defaultValue:t,tabValues:r}))),[s,u]=h({queryString:n,groupId:a}),[d,f]=function(e){let{groupId:t}=e;const n=function(e){return e?`docusaurus.tab.${e}`:null}(t),[a,r]=(0,c.Nk)(n);return[a,(0,o.useCallback)((e=>{n&&r.set(e)}),[n,r])]}({groupId:a}),k=(()=>{const e=s??d;return m({value:e,tabValues:r})?e:null})();(0,o.useLayoutEffect)((()=>{k&&l(k)}),[k]);return{selectedValue:i,selectValue:(0,o.useCallback)((e=>{if(!m({value:e,tabValues:r}))throw new Error(`Can't select invalid tab value=${e}`);l(e),u(e),f(e)}),[u,f,r]),tabValues:r}}var k=n(2389);const g="tabList__CuJ",b="tabItem_LNqP";function y(e){let{className:t,block:n,selectedValue:l,selectValue:s,tabValues:u}=e;const c=[],{blockElementScrollPositionUntilNextRender:d}=(0,i.o5)(),p=e=>{const t=e.currentTarget,n=c.indexOf(t),a=u[n].value;a!==l&&(d(t),s(a))},m=e=>{var t;let n=null;switch(e.key){case"Enter":p(e);break;case"ArrowRight":{const t=c.indexOf(e.currentTarget)+1;n=c[t]??c[0];break}case"ArrowLeft":{const t=c.indexOf(e.currentTarget)-1;n=c[t]??c[c.length-1];break}}null==(t=n)||t.focus()};return o.createElement("ul",{role:"tablist","aria-orientation":"horizontal",className:(0,r.Z)("tabs",{"tabs--block":n},t)},u.map((e=>{let{value:t,label:n,attributes:i}=e;return o.createElement("li",(0,a.Z)({role:"tab",tabIndex:l===t?0:-1,"aria-selected":l===t,key:t,ref:e=>c.push(e),onKeyDown:m,onClick:p},i,{className:(0,r.Z)("tabs__item",b,null==i?void 0:i.className,{"tabs__item--active":l===t})}),n??t)})))}function v(e){let{lazy:t,children:n,selectedValue:a}=e;const r=(Array.isArray(n)?n:[n]).filter(Boolean);if(t){const e=r.find((e=>e.props.value===a));return e?(0,o.cloneElement)(e,{className:"margin-top--md"}):null}return o.createElement("div",{className:"margin-top--md"},r.map(((e,t)=>(0,o.cloneElement)(e,{key:t,hidden:e.props.value!==a}))))}function w(e){const t=f(e);return o.createElement("div",{className:(0,r.Z)("tabs-container",g)},o.createElement(y,(0,a.Z)({},e,t)),o.createElement(v,(0,a.Z)({},e,t)))}function N(e){const t=(0,k.Z)();return o.createElement(w,(0,a.Z)({key:String(t)},e))}},5196:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>c,contentTitle:()=>s,default:()=>m,frontMatter:()=>l,metadata:()=>u,toc:()=>d});var a=n(7462),o=(n(7294),n(3905)),r=n(4866),i=n(5162);const l={title:"Onboard Your Project"},s="Onboard Your Project to Raftt in 10 minutes",u={unversionedId:"basics/onboard_project",id:"basics/onboard_project",title:"Onboard Your Project",description:"What is Raftt?",source:"@site/docs/basics/onboard_project.md",sourceDirName:"basics",slug:"/basics/onboard_project",permalink:"/basics/onboard_project",draft:!1,tags:[],version:"current",frontMatter:{title:"Onboard Your Project"},sidebar:"tutorialSidebar",previous:{title:"Connect Mode Tutorial",permalink:"/basics/tutorials/connect_mode"},next:{title:"Configuration",permalink:"/config"}},c={},d=[{value:"What is Raftt?",id:"what-is-raftt",level:2},{value:"Overview",id:"overview",level:2},{value:"Prerequisites",id:"prerequisites",level:2},{value:"Connecting to the Env",id:"connecting-to-the-env",level:2},{value:"Env inspection in the IDE",id:"env-inspection-in-the-ide",level:3},{value:"Devifying the First Workload",id:"devifying-the-first-workload",level:2},{value:"The <code>raftt dev</code> command",id:"the-raftt-dev-command",level:3},{value:"What is a <code>.raftt</code> file",id:"what-is-a-raftt-file",level:3},{value:"The <code>namespace_resources()</code> function",id:"the-namespace_resources-function",level:3},{value:"Mounting the source code",id:"mounting-the-source-code",level:3},{value:"Compiling your code",id:"compiling-your-code",level:3},{value:"File watching hooks",id:"file-watching-hooks",level:3},{value:"Debug/run configurations",id:"debugrun-configurations",level:3},{value:"Pre-launch tasks",id:"pre-launch-tasks",level:3},{value:"Port Mapping",id:"port-mapping",level:3},{value:"Conclusion and Next Steps",id:"conclusion-and-next-steps",level:2}],p={toc:d};function m(e){let{components:t,...n}=e;return(0,o.kt)("wrapper",(0,a.Z)({},p,n,{components:t,mdxType:"MDXLayout"}),(0,o.kt)("h1",{id:"onboard-your-project-to-raftt-in-10-minutes"},"Onboard Your Project to Raftt in 10 minutes"),(0,o.kt)("h2",{id:"what-is-raftt"},"What is Raftt?"),(0,o.kt)("p",null,"Raftt helps you have fast dev iterations. With Raftt it takes just seconds to see your code changes applied in your dev env on your Kubernetes cluster."),(0,o.kt)("p",null,"Raftt can work in two different modes -"),(0,o.kt)("ol",null,(0,o.kt)("li",{parentName:"ol"},"Connect-mode - to be used if you already have a dev env deployed on K8s and wish to enhance its dev experience using Raftt."),(0,o.kt)("li",{parentName:"ol"},"Orchestration-mode - to be used if you want Raftt to be responsible for spawning and destroying ephemeral dev envs that also have Raftt's dev experience.")),(0,o.kt)("p",null,"If you wish to experience developing with Raftt using a sample project, you can try one of our tutorials - the ",(0,o.kt)("a",{parentName:"p",href:"/basics/tutorials/connect_mode"},"connect-mode tutorial")," or the ",(0,o.kt)("a",{parentName:"p",href:"/basics/tutorials/orchestration_mode"},"orchestration-mode")," one. Going through the tutorials isn't required before using this guide."),(0,o.kt)("h2",{id:"overview"},"Overview"),(0,o.kt)("p",null,"This guide explains how to onboard your existing project to Raftt in connect-mode and includes the following steps -"),(0,o.kt)("ol",null,(0,o.kt)("li",{parentName:"ol"},"Installing Raftt's CLI tool and IDE Plugin"),(0,o.kt)("li",{parentName:"ol"},"Connecting Raftt to your dev env"),(0,o.kt)("li",{parentName:"ol"},"Inspecting the env using Raftt's IDE plugin"),(0,o.kt)("li",{parentName:"ol"},"Converting one of your workload's into dev-mode to allow fast iterations"),(0,o.kt)("li",{parentName:"ol"},"Configure run/debug configurations to allow interactive debugging of the workload's main process.")),(0,o.kt)("h2",{id:"prerequisites"},"Prerequisites"),(0,o.kt)("p",null,"This guide shows how to enhance the development experience of existing K8s envs using Raftt in connect-mode. To successfully go through this guide you first need to meet the following prerequisites -"),(0,o.kt)("ol",null,(0,o.kt)("li",{parentName:"ol"},"Install Raftt's CLI tool and IDE plugin (see ",(0,o.kt)("a",{parentName:"li",href:"/intro/installation"},"here")," for instructions)."),(0,o.kt)("li",{parentName:"ol"},"Clone the repo of the workload you wish to develop to your local machine."),(0,o.kt)("li",{parentName:"ol"},"Deploy the environment you wish to develop as a namespace in a K8s cluster, local or remote."),(0,o.kt)("li",{parentName:"ol"},"Install ",(0,o.kt)("inlineCode",{parentName:"li"},"kubectl")," locally with sufficient permissions (see ",(0,o.kt)("a",{parentName:"li",href:"https://kubernetes.io/docs/tasks/tools/#kubectl"},"here")," for installation guides).",(0,o.kt)("ol",{parentName:"li"},(0,o.kt)("li",{parentName:"ol"},"If your Kube-context doesn't have enough permissions, you can use tools like ",(0,o.kt)("a",{parentName:"li",href:"https://minikube.sigs.k8s.io/docs/start/"},"minikube")," to create a local Kubernetes cluster to deploy your env, and then connect with Raftt.  ")))),(0,o.kt)("h2",{id:"connecting-to-the-env"},"Connecting to the Env"),(0,o.kt)("p",null,"In this section, we'll add Raftt's environment controller to the namespace that contains your dev environment. Take the following steps -"),(0,o.kt)("ol",null,(0,o.kt)("li",{parentName:"ol"},"Make sure your current working directory is the repo of the service you wish to develop."),(0,o.kt)("li",{parentName:"ol"},"Make sure your Kubernetes context is correct")),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-plaintext"},"kubectl config get-contexts\n")),(0,o.kt)("ol",{start:3},(0,o.kt)("li",{parentName:"ol"},"Setup Raftt's initial configuration")),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-plaintext"},"raftt setup --direct\n")),(0,o.kt)("p",null,"This command creates Raftt's basic configuration. The ",(0,o.kt)("inlineCode",{parentName:"p"},"--direct")," flag determines that you're working in connect-mode. The command creates two files in your repo root -"),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("inlineCode",{parentName:"li"},"raftt.yml")," - raftt's basic configuration file"),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("inlineCode",{parentName:"li"},"env.raftt")," - the file that contains the definition of all the changes to resources when entering dev-mode (more on that ",(0,o.kt)("a",{parentName:"li",href:"#devifying-the-first-workload"},"later"),"). For now it's an almost empty template that will be filled later.")),(0,o.kt)("ol",{start:4},(0,o.kt)("li",{parentName:"ol"},"Connect to your dev env")),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-plaintext"},"raftt connect <NAMESPACE>\n")),(0,o.kt)("p",null,"You will be prompted to log in to Raftt using one of several third-party services (Google, GitHub, etc.)."),(0,o.kt)("p",null,"This command adds Raftt's env controller - a deployment called ",(0,o.kt)("inlineCode",{parentName:"p"},"sandcastle"),", to the namespace. The environment controller now waits for Raftt commands."),(0,o.kt)("p",null,"You can now inspect your workloads using ",(0,o.kt)("a",{parentName:"p",href:"/cli_reference#raftt-status"},(0,o.kt)("inlineCode",{parentName:"a"},"raftt status")),", ",(0,o.kt)("a",{parentName:"p",href:"/cli_reference#raftt-sh"},(0,o.kt)("inlineCode",{parentName:"a"},"raftt sh"))," and ",(0,o.kt)("a",{parentName:"p",href:"/cli_reference#raftt-logs"},(0,o.kt)("inlineCode",{parentName:"a"},"raftt logs"))," commands."),(0,o.kt)("h3",{id:"env-inspection-in-the-ide"},"Env inspection in the IDE"),(0,o.kt)("p",null,"Once connected to the environment you can inspect it and execute commands from your IDE using Raftt's plugin."),(0,o.kt)(r.Z,{className:"unique-tabs",groupId:"IDEs",mdxType:"Tabs"},(0,o.kt)(i.Z,{value:"JetBrains",label:"JetBrains IDEs",default:!0,mdxType:"TabItem"},(0,o.kt)("p",null,"The Raftt plugin is accessible from the navigation bar at the bottom of the IDE window. You can see the different workloads and their status, and use the different action buttons to execute Raftt commands."),(0,o.kt)("p",{align:"center"},(0,o.kt)("img",{src:"https://raftt-resources.s3.eu-central-1.amazonaws.com/docs/onboarding_guide/jetbrains_plugin.png",alt:"JetBrains IDE Plugin"}))),(0,o.kt)(i.Z,{value:"VSCode",label:"VS Code",mdxType:"TabItem"},(0,o.kt)("p",null,"The Raftt VS Code Extension is accessible from the activity bar at the left of the IDE window. You can see the different workloads and their status. You can execute different Raftt commands from the workloads context menu (after right-clicking) or from the command palette."),(0,o.kt)("p",{align:"center"},(0,o.kt)("img",{src:"https://raftt-resources.s3.eu-central-1.amazonaws.com/docs/onboarding_guide/vscode_extension.png",alt:"VS Code Extension"})))),(0,o.kt)("h2",{id:"devifying-the-first-workload"},"Devifying the First Workload"),(0,o.kt)("h3",{id:"the-raftt-dev-command"},"The ",(0,o.kt)("inlineCode",{parentName:"h3"},"raftt dev")," command"),(0,o.kt)("p",null,'This command gets resources into dev-mode, or "devifies" them. Devifying a resource means  it is redeployed with modifications that make it much easier to develop. Try to run'),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-plaintext"},"raftt dev <workload_name>\n")),(0,o.kt)("p",null,"and see that it's now in dev-mode, so you can stop and restart the main process without taking the whole workload down - use"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-plaintext"},"raftt stop <workload_name>\n")),(0,o.kt)("p",null,"and"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-plaintext"},"raftt restart <workload_name>\n")),(0,o.kt)("p",null,"respectively."),(0,o.kt)("p",null,"In the next sections we'll configure additional changes that will help accelerating your dev velocity."),(0,o.kt)("h3",{id:"what-is-a-raftt-file"},"What is a ",(0,o.kt)("inlineCode",{parentName:"h3"},".raftt")," file"),(0,o.kt)("p",null,"The ",(0,o.kt)("inlineCode",{parentName:"p"},".raftt")," file defines how Raftt will convert resources into dev-mode (using ",(0,o.kt)("inlineCode",{parentName:"p"},"raftt dev"),"), or rebuild them (using ",(0,o.kt)("inlineCode",{parentName:"p"},"raftt rebuild"),"). It is written in ",(0,o.kt)("a",{parentName:"p",href:"https://github.com/bazelbuild/starlark"},"Starlark")," - a Python-like scripting language."),(0,o.kt)("h3",{id:"the-namespace_resources-function"},"The ",(0,o.kt)("inlineCode",{parentName:"h3"},"namespace_resources()")," function"),(0,o.kt)("p",null,"There are several methods for importing the initial resource definitions. The most useful one for connect-mode is ",(0,o.kt)("inlineCode",{parentName:"p"},"namespace_resources()")," - a function that returns an object containing the definitions of the resources currently deployed in your  namespace."),(0,o.kt)("p",null,"This line was already added to your ",(0,o.kt)("inlineCode",{parentName:"p"},"env.raftt")," file when you ran ",(0,o.kt)("inlineCode",{parentName:"p"},"raftt setup --direct")),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-python"},"resources = namespace_resources()\n")),(0,o.kt)("admonition",{title:"Important",type:"caution"},(0,o.kt)("p",{parentName:"admonition"},"Keep the call to ",(0,o.kt)("inlineCode",{parentName:"p"},"deploy(resources)")," at the end of your ",(0,o.kt)("inlineCode",{parentName:"p"},".raftt")," file - modifications to the ",(0,o.kt)("inlineCode",{parentName:"p"},"resources")," object won't be applied if there's no later call to ",(0,o.kt)("inlineCode",{parentName:"p"},"deploy(resources)"),".")),(0,o.kt)("h3",{id:"mounting-the-source-code"},"Mounting the source code"),(0,o.kt)("p",null,"To allow hot reloading, the source code needs to be mounted (and hence continually synced) into the workload."),(0,o.kt)("p",null,"For example, to mount the code located in the ",(0,o.kt)("inlineCode",{parentName:"p"},"src/payments")," dir in your repo to the ",(0,o.kt)("inlineCode",{parentName:"p"},"/src")," dir in your ",(0,o.kt)("inlineCode",{parentName:"p"},"payments")," deployment add the following line to your env.raftt file -"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-python"},'resources.deployments["payments"].mount(repo_volume().subpath("src/payments"), "/src")\n')),(0,o.kt)("p",null,"For interpreted languages this (and ",(0,o.kt)("inlineCode",{parentName:"p"},"raftt restart"),") is enough for hot reloading. For compiled languages, you'll need to configure how to compile your code."),(0,o.kt)("h3",{id:"compiling-your-code"},"Compiling your code"),(0,o.kt)("p",null,"For compiled languages, you'll want to compile the binary before restarting the main process. The compilation process is performed on one of your env's workloads. In some cases, you can compile on the workload on which the code eventually runs, but it may not be possible for many reasons. In such a case, you'd want to add an additional workload dedicated for compiling the code.",(0,o.kt)("br",{parentName:"p"}),"\n","To do so, define the builder workload in your ",(0,o.kt)("inlineCode",{parentName:"p"},".raftt")," file -"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-python"},'# Import the definitions from a pre-defined yml (see below for more details)\nbuilder_resources = k8s_manifests("./k8s_manifests/builder.yml")\n# Fetch the builder deployment from the imported Resources object\nbuilder = builder_resources.deployments["builder"]\n# Mount the repo to the container root\nbuilder.mount(repo_volume(), "/src")\n# Mark builder to be deploy upon connection to the env\ndeploy_on_connect(builder)\n')),(0,o.kt)("p",null,"The specification of ",(0,o.kt)("inlineCode",{parentName:"p"},"builder.yml")," depends on the language used and on the specific requirements for compiling your code. Here are a few examples for builder.yml files that should work in most cases -  "),(0,o.kt)(r.Z,{className:"unique-tabs",groupId:"programming-languages",mdxType:"Tabs"},(0,o.kt)(i.Z,{value:"Go",label:"Go",mdxType:"TabItem"},(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-yaml"},"apiVersion: apps/v1\nkind: Deployment\nmetadata:\n  name: builder\nspec:\n  selector:\n    matchLabels:\n      app: builder\n  template:\n    metadata:\n      labels:\n        app: builder\n    spec:\n      containers:\n      - name: builder\n        image: golang:latest\n"))),(0,o.kt)(i.Z,{value:"Java",label:"Java",mdxType:"TabItem"},(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-yaml"},"apiVersion: apps/v1\nkind: Deployment\nmetadata:\n  name: builder\nspec:\n  selector:\n    matchLabels:\n      app: builder\n  template:\n    metadata:\n      labels:\n        app: builder\n    spec:\n      containers:\n      - name: builder\n        image: openjdk:latest\n"))),(0,o.kt)(i.Z,{value:"Node.js",label:"Node.js",mdxType:"TabItem"},(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-yaml"},"apiVersion: apps/v1\nkind: Deployment\nmetadata:\n  name: builder\nspec:\n  selector:\n    matchLabels:\n      app: builder\n  template:\n    metadata:\n      labels:\n        app: builder\n    spec:\n      containers:\n      - name: builder\n        image: node:latest\n"))),(0,o.kt)(i.Z,{value:".NET core",label:".NET core",mdxType:"TabItem"},(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-yaml"},"apiVersion: apps/v1\nkind: Deployment\nmetadata:\n  name: builder\nspec:\n  selector:\n    matchLabels:\n      app: builder\n  template:\n    metadata:\n      labels:\n        app: builder\n    spec:\n      containers:\n      - name: builder\n        image: mcr.microsoft.com/dotnet/sdk:latest\n")))),(0,o.kt)("admonition",{title:"Important",type:"caution"},(0,o.kt)("p",{parentName:"admonition"},"At the end of the compilation the artifacts must be located in the workload that runs them. The best way to do it is to have a shared volume between the builder and the workload. See ",(0,o.kt)("a",{parentName:"p",href:"/config/rafttfile#volumes-and-mounts"},"here")," for instructions on how to do it.")),(0,o.kt)("p",null,"After adding the workload in which you can compile your code, you need to configure when and how to trigger the compilation. There are several possible ways to do it, we'll describe three of them -"),(0,o.kt)("ol",null,(0,o.kt)("li",{parentName:"ol"},"Trigger the build directly using")),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-plaintext"},"raftt sh builder -- <build_command>\n")),(0,o.kt)("ol",{start:2},(0,o.kt)("li",{parentName:"ol"},"Configure automatic build on any source code change (see ",(0,o.kt)("a",{parentName:"li",href:"#file-watching-hooks"},"below"),")"),(0,o.kt)("li",{parentName:"ol"},"Configure a pre-launch task in your IDE to run before every run/debug session (see ",(0,o.kt)("a",{parentName:"li",href:"#pre-launch-tasks"},"below"),")")),(0,o.kt)("p",null,"After configuring any of these methods, you can enjoy fast iterations from code change to seeing the change in the cluster, without rebuilding and redeploying any images."),(0,o.kt)("h3",{id:"file-watching-hooks"},"File watching hooks"),(0,o.kt)("p",null,"Raftt lets you define file watching hooks that trigger the execution of predefined actions on predefined workloads. Common use cases of such hooks are -"),(0,o.kt)("ol",null,(0,o.kt)("li",{parentName:"ol"},"Automatic compilation on any code change"),(0,o.kt)("li",{parentName:"ol"},"Automatically installing the dependencies on any change to the dependencies file")),(0,o.kt)("p",null,"The following snippet defines a hook for each use case -"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-python"},'register_hook(\n    on=events.OnFileChanged(\n        workload=payments,\n        patterns="/src/**/*.ts"\n    ),\n    do=actions.CMD(\n        workload=builder,\n        cmd=["npm", "build"]\n    )\n)\n\nregister_hook(\n    on=events.OnFileChanged(\n        workload=payments,\n        patterns="/src/**/package.json"\n    ),\n    do=actions.CMD(\n        workload=payments,\n        cmd=["npm", "install"]\n    )\n)\n')),(0,o.kt)("h3",{id:"debugrun-configurations"},"Debug/run configurations"),(0,o.kt)("p",null,"Raftt lets you interactively debug the workloads in your cluster. It currently supports debugging Python, Go, JavaScript (including TypeScript) and Java-based languages using VS Code and JetBrains IDEs."),(0,o.kt)("p",null,"Raftt debug/run configuration are almost identical to those used for local debugging. To get more information on creating these configurations, see our ",(0,o.kt)("a",{parentName:"p",href:"../debugging/"},"debugging docs"),"."),(0,o.kt)("h3",{id:"pre-launch-tasks"},"Pre-launch tasks"),(0,o.kt)("p",null,"For compiled languages, you'll want to rebuild the binary before launching a run/debug session. To do this you can define a task that will be executed before re-launching the main process. This is defined in the IDE."),(0,o.kt)(r.Z,{className:"unique-tabs",groupId:"IDEs",mdxType:"Tabs"},(0,o.kt)(i.Z,{value:"JetBrains",label:"JetBrains IDEs",default:!0,mdxType:"TabItem"},(0,o.kt)("p",null,"Assuming Raftt's plugin is already ",(0,o.kt)("a",{parentName:"p",href:"/intro/installation#raftt-ide-plugin"},"installed"),", you can add a new ",(0,o.kt)("inlineCode",{parentName:"p"},"before launch")," task of the type ",(0,o.kt)("inlineCode",{parentName:"p"},"Run on Raftt workload")," in which you can define what build command to run and on which workload."),(0,o.kt)("p",{align:"center"},(0,o.kt)("img",{src:"https://raftt-resources.s3.eu-central-1.amazonaws.com/docs/onboarding_guide/raftt_before_launch_task.png",alt:"before launch task"})),(0,o.kt)("p",null,"The command can run on any workload of your choice, not just on the one running the binary.")),(0,o.kt)(i.Z,{value:"VSCode",label:"VS Code",mdxType:"TabItem"},(0,o.kt)("p",null,"Use VS Code's builtin ",(0,o.kt)("a",{parentName:"p",href:"https://learn.microsoft.com/en-us/answers/questions/1178793/visual-studio-2022-how-to-create-a-launch-json-wit"},"prelaunch task mechanism"),". Define the task in the ",(0,o.kt)("inlineCode",{parentName:"p"},"tasks.json")," file to run a command on any workload using ",(0,o.kt)("a",{parentName:"p",href:"/cli_reference#raftt-sh"},(0,o.kt)("inlineCode",{parentName:"a"},"raftt sh"))," and than assign it to the relevant run/debug configuration(s) in your ",(0,o.kt)("inlineCode",{parentName:"p"},"launch.json")," file."))),(0,o.kt)("h3",{id:"port-mapping"},"Port Mapping"),(0,o.kt)("p",null,"In some cases, when developing, you'd want to map a remote port to localhost. This can be defined in the ",(0,o.kt)("inlineCode",{parentName:"p"},".raftt")," file and the mapping will occur once the workload is in dev-mode."),(0,o.kt)("p",null,"For example to map port 27017 from your ",(0,o.kt)("inlineCode",{parentName:"p"},"mongodb")," StatefulSet to your local port 27017, add the following line to your ",(0,o.kt)("inlineCode",{parentName:"p"},".raftt")," file -"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-python"},'resources.statefulsets["mongodb"].map_port(local=27017, remote=27017)\n')),(0,o.kt)("h2",{id:"conclusion-and-next-steps"},"Conclusion and Next Steps"),(0,o.kt)("p",null,"In this guide you went through configuring Raftt to develop one of your workloads. You can now enjoy dev iterations that take seconds instead of minutes, or much more, and enjoy interactive debugging directly in your cluster."),(0,o.kt)("p",null,"Now you can onboard the rest of your environment to have the great Raftt dev experience for all of your workloads."),(0,o.kt)("p",null,"You're welcome to join our ",(0,o.kt)("a",{parentName:"p",href:"https://join.slack.com/t/rafttcommunity/shared_invite/zt-196nlb5ra-rYPWEqQF~ETdgx9aqWANnw"},"Slack community")," or ",(0,o.kt)("a",{parentName:"p",href:"https://raftt.io/contact"},"contact us")," for any further questions and enquiries."))}m.isMDXComponent=!0}}]);