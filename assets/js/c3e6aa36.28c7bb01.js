"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[485],{3905:function(e,t,a){a.d(t,{Zo:function(){return u},kt:function(){return d}});var r=a(7294);function n(e,t,a){return t in e?Object.defineProperty(e,t,{value:a,enumerable:!0,configurable:!0,writable:!0}):e[t]=a,e}function s(e,t){var a=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),a.push.apply(a,r)}return a}function l(e){for(var t=1;t<arguments.length;t++){var a=null!=arguments[t]?arguments[t]:{};t%2?s(Object(a),!0).forEach((function(t){n(e,t,a[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(a)):s(Object(a)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(a,t))}))}return e}function o(e,t){if(null==e)return{};var a,r,n=function(e,t){if(null==e)return{};var a,r,n={},s=Object.keys(e);for(r=0;r<s.length;r++)a=s[r],t.indexOf(a)>=0||(n[a]=e[a]);return n}(e,t);if(Object.getOwnPropertySymbols){var s=Object.getOwnPropertySymbols(e);for(r=0;r<s.length;r++)a=s[r],t.indexOf(a)>=0||Object.prototype.propertyIsEnumerable.call(e,a)&&(n[a]=e[a])}return n}var i=r.createContext({}),c=function(e){var t=r.useContext(i),a=t;return e&&(a="function"==typeof e?e(t):l(l({},t),e)),a},u=function(e){var t=c(e.components);return r.createElement(i.Provider,{value:t},e.children)},f={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},p=r.forwardRef((function(e,t){var a=e.components,n=e.mdxType,s=e.originalType,i=e.parentName,u=o(e,["components","mdxType","originalType","parentName"]),p=c(a),d=n,m=p["".concat(i,".").concat(d)]||p[d]||f[d]||s;return a?r.createElement(m,l(l({ref:t},u),{},{components:a})):r.createElement(m,l({ref:t},u))}));function d(e,t){var a=arguments,n=t&&t.mdxType;if("string"==typeof e||n){var s=a.length,l=new Array(s);l[0]=p;var o={};for(var i in t)hasOwnProperty.call(t,i)&&(o[i]=t[i]);o.originalType=e,o.mdxType="string"==typeof e?e:n,l[1]=o;for(var c=2;c<s;c++)l[c]=a[c];return r.createElement.apply(null,l)}return r.createElement.apply(null,a)}p.displayName="MDXCreateElement"},274:function(e,t,a){a.r(t),a.d(t,{assets:function(){return u},contentTitle:function(){return i},default:function(){return d},frontMatter:function(){return o},metadata:function(){return c},toc:function(){return f}});var r=a(7462),n=a(3366),s=(a(7294),a(3905)),l=["components"],o={title:"CLI Reference"},i="CLI Reference",c={unversionedId:"cli_reference",id:"cli_reference",title:"CLI Reference",description:"In this document, you can find the full list of Raftt CLI commands and usage information.",source:"@site/docs/cli_reference.md",sourceDirName:".",slug:"/cli_reference",permalink:"/docs/cli_reference",tags:[],version:"current",frontMatter:{title:"CLI Reference"},sidebar:"tutorialSidebar",previous:{title:"JetBrains IDEs",permalink:"/docs/debugging/JetBrains"}},u={},f=[{value:"raftt",id:"raftt",level:2},{value:"Command List",id:"command-list",level:2},{value:"raftt cluster",id:"raftt-cluster",level:3},{value:"raftt cluster secrets",id:"raftt-cluster-secrets",level:4},{value:"raftt cluster secrets delete",id:"raftt-cluster-secrets-delete",level:4},{value:"raftt cluster secrets list",id:"raftt-cluster-secrets-list",level:4},{value:"raftt cluster secrets set",id:"raftt-cluster-secrets-set",level:4},{value:"raftt cp",id:"raftt-cp",level:3},{value:"raftt data",id:"raftt-data",level:3},{value:"raftt data dump",id:"raftt-data-dump",level:4},{value:"raftt data load",id:"raftt-data-load",level:4},{value:"raftt data save",id:"raftt-data-save",level:4},{value:"raftt data seed",id:"raftt-data-seed",level:4},{value:"raftt down",id:"raftt-down",level:3},{value:"raftt expose",id:"raftt-expose",level:3},{value:"raftt init",id:"raftt-init",level:3},{value:"raftt list",id:"raftt-list",level:3},{value:"raftt logs",id:"raftt-logs",level:3},{value:"raftt port",id:"raftt-port",level:3},{value:"raftt port map",id:"raftt-port-map",level:4},{value:"raftt port unmap",id:"raftt-port-unmap",level:4},{value:"raftt rebuild",id:"raftt-rebuild",level:3},{value:"raftt restart",id:"raftt-restart",level:3},{value:"raftt setup",id:"raftt-setup",level:3},{value:"raftt sh",id:"raftt-sh",level:3},{value:"raftt status",id:"raftt-status",level:3},{value:"raftt stop",id:"raftt-stop",level:3},{value:"raftt up",id:"raftt-up",level:3},{value:"raftt version",id:"raftt-version",level:3}],p={toc:f};function d(e){var t=e.components,a=(0,n.Z)(e,l);return(0,s.kt)("wrapper",(0,r.Z)({},p,a,{components:t,mdxType:"MDXLayout"}),(0,s.kt)("h1",{id:"cli-reference"},"CLI Reference"),(0,s.kt)("p",null,"In this document, you can find the full list of Raftt CLI commands and usage information."),(0,s.kt)("p",null,"Help information is also available by running ",(0,s.kt)("inlineCode",{parentName:"p"},"raftt --help"),", or ",(0,s.kt)("inlineCode",{parentName:"p"},"raftt -h"),"."),(0,s.kt)("h2",{id:"raftt"},"raftt"),(0,s.kt)("p",null,"Manage your development environment with ease"),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-text"},'Usage:\n  raftt\n  raftt [command]\n\nAvailable Commands:\n  cluster     Manage global cluster properties\n  cp          Copy files to and from a service\n  data        Reset or persist the data of a service\n  down        Put the environment to sleep\n  expose      Share access to one or more services\n  init        Initialize Raftt for the current git repository\n  list        List connected environments\n  logs        Get the logs of a service\n  port        Control port forwarding to remote environment\n  rebuild     Rebuild and deploy one or more services\n  restart     Restart a service\n  setup       Create the first raftt.yml file\n  sh          Connect or run a command on a service\n  status      Show the status of the current Raftt environment\n  stop        Stop one or more services\n  up          Spawn or reconnect to a Raftt environment\n  version     Show the Raftt version information\n\nUse "raftt [command] --help" for more information about a command.\n')),(0,s.kt)("h2",{id:"command-list"},"Command List"),(0,s.kt)("h3",{id:"raftt-cluster"},"raftt cluster"),(0,s.kt)("p",null,"Manage global cluster properties (secrets, ...)"),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-text"},'Usage:\n  raftt cluster [command]\n\nAvailable Commands:\n  secrets     Perform actions on cluster secrets\n\nUse "raftt cluster [command] --help" for more information about a command.\n')),(0,s.kt)("h4",{id:"raftt-cluster-secrets"},"raftt cluster secrets"),(0,s.kt)("p",null,"Set, delete or list global cluster secrets"),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-text"},'Usage:\n  raftt cluster secrets [command]\n\nAvailable Commands:\n  delete      Delete a global cluster secret\n  list        List global cluster secrets\n  set         Set a global cluster secret\n\nUse "raftt cluster secrets [command] --help" for more information about a command.\n')),(0,s.kt)("h4",{id:"raftt-cluster-secrets-delete"},"raftt cluster secrets delete"),(0,s.kt)("p",null,"Delete a global cluster secret"),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-text"},"Usage:\n  raftt cluster secrets delete SECRET_NAME\n\nFlags:\n      --force   force deletion\n")),(0,s.kt)("h4",{id:"raftt-cluster-secrets-list"},"raftt cluster secrets list"),(0,s.kt)("p",null,"List all secrets defined in the cluster"),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-text"},"Usage:\n  raftt cluster secrets list\n")),(0,s.kt)("h4",{id:"raftt-cluster-secrets-set"},"raftt cluster secrets set"),(0,s.kt)("p",null,"Set a global cluster secret"),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-text"},"Usage:\n  raftt cluster secrets set SECRET_NAME\n\nFlags:\n  -f, --file string   file from which to read secret\n")),(0,s.kt)("h3",{id:"raftt-cp"},"raftt cp"),(0,s.kt)("p",null,"Copy files to and from a service using the SCP protocol.\nOmitting the service name means referring to the local machine."),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-text"},"Usage:\n  raftt cp [SERVICE:]source ... [SERVICE:]target\n\nFlags:\n  -r, --recursive   Copy directories recursively\n")),(0,s.kt)("h3",{id:"raftt-data"},"raftt data"),(0,s.kt)("p",null,"Reset or persist the state of one or more databases to / from git or the cloud"),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-text"},'Usage:\n  raftt data [command]\n\nAvailable Commands:\n  dump        Dump the state of a database to a file in the git repository\n  load        Load a previously saved DB state according to a tag\n  save        Commit the state of one or more databases to the cloud according to a tag\n  seed        Seeds the state of one or more databases from git or the cloud\n\nUse "raftt data [command] --help" for more information about a command.\n')),(0,s.kt)("h4",{id:"raftt-data-dump"},"raftt data dump"),(0,s.kt)("p",null,"Dump the state of one or more databases to a file in the git repository"),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-text"},"Usage:\n  raftt data dump CONTAINER_NAME [...]\n")),(0,s.kt)("h4",{id:"raftt-data-load"},"raftt data load"),(0,s.kt)("p",null,"Load a previously saved DB state according to a tag of one or more databases from the cloud"),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-text"},"Usage:\n  raftt data load CONTAINER_NAME -t TAG\n\nFlags:\n  -t, --tag string   Reset to a specific tag, applies to all services being seeded\n")),(0,s.kt)("h4",{id:"raftt-data-save"},"raftt data save"),(0,s.kt)("p",null,"Commit the state of one or more databases to the cloud according to a supplied tag"),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-text"},"Usage:\n  raftt data save CONTAINER_NAME -t TAG\n\nFlags:\n  -t, --tag string   Commit to a specific tag, applies to all services being seeded\n")),(0,s.kt)("h4",{id:"raftt-data-seed"},"raftt data seed"),(0,s.kt)("p",null,"Seeds the state of one or more databases according to git or the cloud"),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-text"},"Usage:\n  raftt data seed CONTAINER_NAME [...]\n")),(0,s.kt)("h3",{id:"raftt-down"},"raftt down"),(0,s.kt)("p",null,"Put the environment to sleep. If session ID is not supplied, use the session for the current repository."),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-text"},"Usage:\n  raftt down [session ID]\n\nFlags:\n  -a, --all      all envs\n  -d, --delete   delete env instead of putting to sleep\n  -f, --force    skip confirmation prompt\n  -w, --wait     wait for logs\n")),(0,s.kt)("h3",{id:"raftt-expose"},"raftt expose"),(0,s.kt)("p",null,"Share access to one or more services through a publicly accessible URL"),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-text"},"Usage:\n  raftt expose SERVICE_NAME [...]\n\nFlags:\n  -d, --delete               delete exposed service\n      --password-fd string   file to read password for authentication\n  -u, --user string          username for authentication\n")),(0,s.kt)("h3",{id:"raftt-init"},"raftt init"),(0,s.kt)("p",null,"Initialize Raftt for the current git repository. Run once per git repository."),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-text"},"Usage:\n  raftt init\n\nFlags:\n  -F, --force   force overwrite current user token\n")),(0,s.kt)("h3",{id:"raftt-list"},"raftt list"),(0,s.kt)("p",null,"List connected environments"),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-text"},"Usage:\n  raftt list\n")),(0,s.kt)("h3",{id:"raftt-logs"},"raftt logs"),(0,s.kt)("p",null,"Get the logs of a service"),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-text"},'Usage:\n  raftt logs SERVICE\n\nFlags:\n  -f, --follow         Follow log output\n      --since string   Show logs since timestamp (e.g. 2013-01-02T13:23:37Z) or relative (e.g. 42m for 42 minutes)\n  -n, --tail string    Number of lines to show from the end of the logs (default "all")\n  -t, --timestamps     Show timestamps\n      --until string   Show logs before a timestamp (e.g. 2013-01-02T13:23:37Z) or relative (e.g. 42m for 42 minutes)\n')),(0,s.kt)("h3",{id:"raftt-port"},"raftt port"),(0,s.kt)("p",null,"Control port forwarding to remote environment"),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-text"},'Usage:\n  raftt port [command]\n\nAvailable Commands:\n  map         Forward local port(s) to remote env\n  unmap       Unmap local ports from remote env\n\nUse "raftt port [command] --help" for more information about a command.\n')),(0,s.kt)("h4",{id:"raftt-port-map"},"raftt port map"),(0,s.kt)("p",null,"Map local port(s) to remote env"),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-text"},"Usage:\n  raftt port map [-s|-r] SERVICE [LOCAL_PORT:]REMOTE_PORT\n\nFlags:\n  -r, --reverse   Forward from remote service to local machine instead (reverse tunnel)\n")),(0,s.kt)("h4",{id:"raftt-port-unmap"},"raftt port unmap"),(0,s.kt)("p",null,"Unmap local ports from remote env"),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-text"},"Usage:\n  raftt port unmap [-s] LOCAL_PORT\n\nFlags:\n  -r, --reverse   unmap reverse tunnel\n")),(0,s.kt)("h3",{id:"raftt-rebuild"},"raftt rebuild"),(0,s.kt)("p",null,"Rebuild and deploy one or more services, if no services specified the entire environment is rebuilt and deployed."),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-text"},"Usage:\n  raftt rebuild [SERVICES...]\n\nAliases:\n  rebuild, reload\n\nFlags:\n  -r, --reseed   re-seed DBs\n")),(0,s.kt)("h3",{id:"raftt-restart"},"raftt restart"),(0,s.kt)("p",null,"Restart the main process of a service.\nNOTE: The container itself isn't restarted and any changes made to it will remain."),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-text"},"Usage:\n  raftt restart SERVICE [OPTIONS] -- [ALTERNATIVE_ARGUMENTS]\n\nFlags:\n  -e, --env stringArray   Specify environment variables to set for the process\n      --env-file string   Specify a file to read environment variables from\n  -w, --workdir string    Specify workdir to set for the process\n")),(0,s.kt)("h3",{id:"raftt-setup"},"raftt setup"),(0,s.kt)("p",null,"Help with the setup of the Raftt environment"),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-text"},'Usage:\n  raftt setup\n\nFlags:\n  -d, --dev-container-folder string   Folder under the git root to put the dev-container dockerfile at (default "dev")\n')),(0,s.kt)("h3",{id:"raftt-sh"},"raftt sh"),(0,s.kt)("p",null,"Connect or run a command on a service using the SSH protocol"),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-text"},"Usage:\n  raftt sh SERVICE [flags] [-- COMMAND]\n")),(0,s.kt)("h3",{id:"raftt-status"},"raftt status"),(0,s.kt)("p",null,"Show the status of the current Raftt environment"),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-text"},"Usage:\n  raftt status\n\nFlags:\n  -d, --debug   show debug information\n  -w, --wait    wait for environment to spawn\n")),(0,s.kt)("h3",{id:"raftt-stop"},"raftt stop"),(0,s.kt)("p",null,"Stop the main process and its children of one or more services"),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-text"},"Usage:\n  raftt stop SERVICE [SERVICE...]\n")),(0,s.kt)("h3",{id:"raftt-up"},"raftt up"),(0,s.kt)("p",null,"Spawn a new Raftt environment or reconnect to an existing one"),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-text"},"Usage:\n  raftt up\n")),(0,s.kt)("h3",{id:"raftt-version"},"raftt version"),(0,s.kt)("p",null,"Shows the version information of the Raftt executable"),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-text"},"Usage:\n  raftt version\n\nFlags:\n  -s, --silent   Show version only\n")))}d.isMDXComponent=!0}}]);